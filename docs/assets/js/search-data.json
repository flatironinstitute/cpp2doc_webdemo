{
  
  "1": {
    "title": "nda::<deduction guide for array_adapter>",
    "content": "",
    "url": "/cpp-api/nda/%3Cdeduction%20guide%20for%20array_adapter%3E/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/<deduction guide for array_adapter>/"
  }
  ,"2": {
    "title": "nda::<deduction guide for basic_array>",
    "content": "",
    "url": "/cpp-api/nda/%3Cdeduction%20guide%20for%20basic_array%3E/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/<deduction guide for basic_array>/"
  }
  ,"3": {
    "title": "sandbox::myarray<T, R>::AAA",
    "content": "",
    "url": "/cpp-api/sandbox/myarray/AAA/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/sandbox/myarray/AAA/"
  }
  ,"4": {
    "title": "sandbox::AB45",
    "content": "",
    "url": "/cpp-api/sandbox/AB45/",
    "brief": "A45 class grief .",
    "desc": "a45 long desc .",
    "relUrl": "/cpp-api/sandbox/AB45/"
  }
  ,"5": {
    "title": "nda::Array",
    "content": "",
    "url": "/cpp-api/nda/Array/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/Array/"
  }
  ,"6": {
    "title": "sandbox::Array",
    "content": "",
    "url": "/cpp-api/sandbox/Array/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/sandbox/Array/"
  }
  ,"7": {
    "title": "nda::ArrayInitializer",
    "content": "",
    "url": "/cpp-api/nda/ArrayInitializer/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/ArrayInitializer/"
  }
  ,"8": {
    "title": "sandbox::ArrayInitializer",
    "content": "",
    "url": "/cpp-api/sandbox/ArrayInitializer/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/sandbox/ArrayInitializer/"
  }
  ,"9": {
    "title": "sandbox::ArrayOfRank",
    "content": "",
    "url": "/cpp-api/sandbox/ArrayOfRank/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/sandbox/ArrayOfRank/"
  }
  ,"10": {
    "title": "nda::ArrayOfRank",
    "content": "",
    "url": "/cpp-api/nda/ArrayOfRank/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/ArrayOfRank/"
  }
  ,"11": {
    "title": "sandbox::ArrayOfT",
    "content": "",
    "url": "/cpp-api/sandbox/ArrayOfT/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/sandbox/ArrayOfT/"
  }
  ,"12": {
    "title": "sandbox::myarray<T, R>::BBB",
    "content": "",
    "url": "/cpp-api/sandbox/myarray/BBB/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/sandbox/myarray/BBB/"
  }
  ,"13": {
    "title": "nda::C_layout",
    "content": "",
    "url": "/cpp-api/nda/C_layout/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/C_layout/"
  }
  ,"14": {
    "title": "nda::C_layout_str",
    "content": "",
    "url": "/cpp-api/nda/C_layout_str/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/C_layout_str/"
  }
  ,"15": {
    "title": "nda::C_stride_layout",
    "content": "",
    "url": "/cpp-api/nda/C_stride_layout/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/C_stride_layout/"
  }
  ,"16": {
    "title": "nda::C_stride_layout_str",
    "content": "",
    "url": "/cpp-api/nda/C_stride_layout_str/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/C_stride_layout_str/"
  }
  ,"17": {
    "title": "sandbox::fgh1",
    "content": "",
    "url": "/cpp-api/sandbox/FGH12/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/sandbox/FGH12/"
  }
  ,"18": {
    "title": "nda::F_layout",
    "content": "",
    "url": "/cpp-api/nda/F_layout/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/F_layout/"
  }
  ,"19": {
    "title": "nda::F_layout_str",
    "content": "",
    "url": "/cpp-api/nda/F_layout_str/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/F_layout_str/"
  }
  ,"20": {
    "title": "nda::F_stride_layout",
    "content": "",
    "url": "/cpp-api/nda/F_stride_layout/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/F_stride_layout/"
  }
  ,"21": {
    "title": "nda::F_stride_layout_str",
    "content": "",
    "url": "/cpp-api/nda/F_stride_layout_str/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/F_stride_layout_str/"
  }
  ,"22": {
    "title": "nda::HasValueTypeConvertibleTo",
    "content": "",
    "url": "/cpp-api/nda/HasValueTypeConvertibleTo/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/HasValueTypeConvertibleTo/"
  }
  ,"23": {
    "title": "nda::blas::IsDoubleOrComplex",
    "content": "",
    "url": "/cpp-api/nda/blas/IsDoubleOrComplex/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/blas/IsDoubleOrComplex/"
  }
  ,"24": {
    "title": "sandbox::impl::IsStdArrayOfLong",
    "content": "",
    "url": "/cpp-api/sandbox/impl/IsStdArrayOfLong/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/sandbox/impl/IsStdArrayOfLong/"
  }
  ,"25": {
    "title": "nda::blas::MatrixView",
    "content": "",
    "url": "/cpp-api/nda/blas/MatrixView/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/blas/MatrixView/"
  }
  ,"26": {
    "title": "nda::StdEqualityComparableWith",
    "content": "",
    "url": "/cpp-api/nda/StdEqualityComparableWith/",
    "brief": "A simplified version of std::equality_comparable_with (temporary fix waiting to implementation of .",
    "desc": "in libc++",
    "relUrl": "/cpp-api/nda/StdEqualityComparableWith/"
  }
  ,"27": {
    "title": "nda::blas::VectorView",
    "content": "",
    "url": "/cpp-api/nda/blas/VectorView/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/blas/VectorView/"
  }
  ,"29": {
    "title": "nda::abs",
    "content": "",
    "url": "/cpp-api/nda/abs/",
    "brief": "Maps abs onto the array .",
    "desc": "",
    "relUrl": "/cpp-api/nda/abs/"
  }
  ,"30": {
    "title": "nda::abs2",
    "content": "",
    "url": "/cpp-api/nda/abs2/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/abs2/"
  }
  ,"31": {
    "title": "nda::default_accessor::accessor<T>::access",
    "content": "",
    "url": "/cpp-api/nda/default_accessor/accessor/access/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/default_accessor/accessor/access/"
  }
  ,"32": {
    "title": "nda::no_alias_accessor::accessor<T>::access",
    "content": "",
    "url": "/cpp-api/nda/no_alias_accessor/accessor/access/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/no_alias_accessor/accessor/access/"
  }
  ,"33": {
    "title": "nda::default_accessor::accessor",
    "content": "",
    "url": "/cpp-api/nda/default_accessor/accessor/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/default_accessor/accessor/"
  }
  ,"34": {
    "title": "nda::no_alias_accessor::accessor",
    "content": "",
    "url": "/cpp-api/nda/no_alias_accessor/accessor/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/no_alias_accessor/accessor/"
  }
  ,"35": {
    "title": "nda::acos",
    "content": "",
    "url": "/cpp-api/nda/acos/",
    "brief": "Maps acos onto the array .",
    "desc": "",
    "relUrl": "/cpp-api/nda/acos/"
  }
  ,"36": {
    "title": "nda::all",
    "content": "",
    "url": "/cpp-api/nda/all/",
    "brief": "Returns true iif all elements of the array are true .",
    "desc": "",
    "relUrl": "/cpp-api/nda/all/"
  }
  ,"37": {
    "title": "nda::any",
    "content": "",
    "url": "/cpp-api/nda/any/",
    "brief": "Returns true iif at least one element of the array is true .",
    "desc": "",
    "relUrl": "/cpp-api/nda/any/"
  }
  ,"38": {
    "title": "nda::stdutil::append",
    "content": "",
    "url": "/cpp-api/nda/stdutil/append/",
    "brief": "Make a new std::array by appending one element at the end .",
    "desc": "",
    "relUrl": "/cpp-api/nda/stdutil/append/"
  }
  ,"39": {
    "title": "Applications",
    "content": "Applications based on TRIQS . The TRIQS library provides all the necessary building blocks for the development of applications for the study of interacting quantum systems. . These applications can be grouped into one of the following categories: . Official applications Developed and are maintained by the TRIQS collaboration. External applications Developed and are maintained externally but still fundamentally relying on TRIQS library features. Interfaces to external codes Thin wrappers around TRIQS independent codes that are developed and maintained externally. The maintenance of the interface layer is shared between the TRIQS collaboration and the external developers. If you would like to have your application listed please contact us directly. . . . Applications based on TRIQS Impurity Solvers Hybridization-expansion solver | Hubbard I solver (external) | PYED - Exact diagonalization for finite quantum systems (external) | Interface to the pomerol exact diagonalization solver (external) | Interface to the w2dynamics impurity solver | Interface to the NRG Ljubljana impurity solver | | Ab-Initio Tools DFT tools - Toolbox for ab initio calculations of correlated materials | TPRF - The Two-Particle Response Function tool box | | Analytic Continuation Maxent | SOM - Stochastic Optimization Method for Analytic Continuation (external) | | | . Impurity Solvers . Hybridization-expansion solver . The hybridization-expansion solver is an official TRIQS application that allows to solve the generic problem of a quantum impurity embedded in a conduction bath. It is based on a quantum Monte Carlo algorithm that stochastically samples the diagrams of a hybridization expansion of the partition function. . For publications based on results produced with this application please cite Comput. Phys. Comm. 200, 274 (2016) . Homepage: https://triqs.github.io/cthyb/ . Hubbard I solver (external) . This solver gives the Hubbard I solution of a quantum impurity problem, i.e. it solves the atomic limit. This simple approximation allows for very quick answers even for large multiband systems. . Homepage: https://triqs.github.io/hubbardI/ . PYED - Exact diagonalization for finite quantum systems (external) . The TRIQS-based python application pyed implements exact diagonalization for finite fermionic many-body quantum systems, together with calculations of several response functions in imagianary time. . Homepage: https://github.com/hugostrand/pyed/ . Interface to the pomerol exact diagonalization solver (external) . TRIQS wrapper around the Pomerol exact diagonalization library. . For publications based on results produced with this application please cite 10.5281/zenodo.592291 . Homepage: https://github.com/krivenko/pomerol2triqs/ . Interface to the w2dynamics impurity solver . This application provides an interface to the continuous-time hybridization expansion impurity solver contained in the w2dynamics software package. . For publications based on results produced with this application please cite Comput. Phys. Commun. 235, 388 (2019) . Homepage: https://triqs.github.io/w2dynamics_interface/ . Interface to the NRG Ljubljana impurity solver . This application provides an interface to the numerical renormalization group impurity solver NRG Ljubljana. . For publications based on results produced with this application please cite Phys. Rev. B 79, 085106 (2009) . Homepage: https://triqs.github.io/nrgljubljana_interface/ . Ab-Initio Tools . DFT tools - Toolbox for ab initio calculations of correlated materials . DFTTools is an official TRIQS application that provides an interface to DFT packages such as Wien2k and VASP for DFT+DMFT calculation. It allows you to turn band-structure calculations results to inputs for full-fledged DFT+DMFT calculations in a few lines. . For publications based on results produced with this application please cite Comput. Phys. Comm. 204, 200 (2016) . Homepage: https://triqs.github.io/dft_tools/ . TPRF - The Two-Particle Response Function tool box . The two-particle response function tool box (TPRF) is an official TRIQS application that provides efficient (C++/OpenMP/MPI) implementations of the basic operations for higher order response functions such as inversion, products, the random phase approximation, the Bethe Salpeter equation, etc. . For publications based on results produced with this application please cite 10.5281/zenodo.2638058 . Homepage: https://triqs.github.io/tprf/ . Analytic Continuation . Maxent . This official TRIQS application provides a modular Maximum Entropy program to perform analytic continuation. . Homepage: https://triqs.github.io/maxent/ . SOM - Stochastic Optimization Method for Analytic Continuation (external) . This external TRIQS application is an optimized implementation of an analytic continuation method proposed by Andrey S. Mishchenko. A detailed description of the method can be found here. .",
    "url": "/apps/",
    "brief": "",
    "desc": "",
    "relUrl": "/apps/"
  }
  ,"40": {
    "title": "nda::array_adapter<R, F>::array_adapter",
    "content": "",
    "url": "/cpp-api/nda/array_adapter/array_adapter-constructors/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/array_adapter/array_adapter-constructors/"
  }
  ,"41": {
    "title": "nda::array_adapter",
    "content": "",
    "url": "/cpp-api/nda/array_adapter/",
    "brief": "A pair shape + lambda –&gt; an immutable array .",
    "desc": "",
    "relUrl": "/cpp-api/nda/array_adapter/"
  }
  ,"42": {
    "title": "nda::array_iterator<Rank, T, Pointer>::array_iterator",
    "content": "",
    "url": "/cpp-api/nda/array_iterator/array_iterator-constructors/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/array_iterator/array_iterator-constructors/"
  }
  ,"43": {
    "title": "nda::array_iterator",
    "content": "",
    "url": "/cpp-api/nda/array_iterator/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/array_iterator/"
  }
  ,"44": {
    "title": "nda::array_iterator<1, T, Pointer>",
    "content": "",
    "url": "/cpp-api/nda/array_iterator%3C1,%20T,%20Pointer%3E/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/array_iterator<1, T, Pointer>/"
  }
  ,"45": {
    "title": "nda::asin",
    "content": "",
    "url": "/cpp-api/nda/asin/",
    "brief": "Maps asin onto the array .",
    "desc": "",
    "relUrl": "/cpp-api/nda/asin/"
  }
  ,"46": {
    "title": "nda::atan",
    "content": "",
    "url": "/cpp-api/nda/atan/",
    "brief": "Maps atan onto the array .",
    "desc": "",
    "relUrl": "/cpp-api/nda/atan/"
  }
  ,"47": {
    "title": "nda::basic_array<ValueType, Rank, Layout, Algebra, ContainerPolicy>::basic_array",
    "content": "",
    "url": "/cpp-api/nda/basic_array/basic_array-constructors/",
    "brief": "Empty array .",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_array/basic_array-constructors/"
  }
  ,"48": {
    "title": "nda::basic_array",
    "content": "",
    "url": "/cpp-api/nda/basic_array/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_array/"
  }
  ,"49": {
    "title": "nda::basic_array_view<ValueType, Rank, Layout, Algebra, AccessorPolicy, OwningPolicy>::basic_array_view",
    "content": "",
    "url": "/cpp-api/nda/basic_array_view/basic_array_view-constructors/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_array_view/basic_array_view-constructors/"
  }
  ,"50": {
    "title": "nda::basic_array_view",
    "content": "",
    "url": "/cpp-api/nda/basic_array_view/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_array_view/"
  }
  ,"51": {
    "title": "nda::basic_layout",
    "content": "",
    "url": "/cpp-api/nda/basic_layout/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_layout/"
  }
  ,"52": {
    "title": "nda::basic_layout_str",
    "content": "",
    "url": "/cpp-api/nda/basic_layout_str/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_layout_str/"
  }
  ,"53": {
    "title": "nda::range::begin",
    "content": "",
    "url": "/cpp-api/nda/range/begin/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/range/begin/"
  }
  ,"54": {
    "title": "nda::basic_array<ValueType, Rank, Layout, Algebra, ContainerPolicy>::begin",
    "content": "",
    "url": "/cpp-api/nda/basic_array/begin/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_array/begin/"
  }
  ,"55": {
    "title": "nda::basic_array_view<ValueType, Rank, Layout, Algebra, AccessorPolicy, OwningPolicy>::begin",
    "content": "",
    "url": "/cpp-api/nda/basic_array_view/begin/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_array_view/begin/"
  }
  ,"56": {
    "title": "nda::blas",
    "content": "",
    "url": "/cpp-api/nda/blas/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/blas/"
  }
  ,"57": {
    "title": "nda::borrowed",
    "content": "",
    "url": "/cpp-api/nda/borrowed/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/borrowed/"
  }
  ,"58": {
    "title": "Buttons",
    "content": "Buttons . . Basic button styles Links that look like buttons | Button element | | Using utilities with buttons Button size | Spacing between buttons | | . Basic button styles . Links that look like buttons . Link button . Link button Link button Link button . Link button . markdown Link button . Link button Link button Link button . Link button . Button element . GitHub Flavored Markdown does not support the button element, so you’ll have to use inline HTML for this: . Button element html &lt;button type=&quot;button&quot; name=&quot;button&quot; class=&quot;btn&quot;&gt;Button element&lt;/button&gt; . . Using utilities with buttons . Button size . Big ass button . Tiny ass button . markdown Link button . Tiny ass button . Spacing between buttons . Use the margin utility classes to add spacing between two buttons in the same block. . Button with space Button . Button with more space Button . markdown Button with space Button . Button with more space Button .",
    "url": "/theme/ui-components/buttons/",
    "brief": "",
    "desc": "",
    "relUrl": "/theme/ui-components/buttons/"
  }
  ,"59": {
    "title": "nda::basic_array_view<ValueType, Rank, Layout, Algebra, AccessorPolicy, OwningPolicy>::cbegin",
    "content": "",
    "url": "/cpp-api/nda/basic_array_view/cbegin/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_array_view/cbegin/"
  }
  ,"60": {
    "title": "nda::range::cbegin",
    "content": "",
    "url": "/cpp-api/nda/range/cbegin/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/range/cbegin/"
  }
  ,"61": {
    "title": "nda::basic_array<ValueType, Rank, Layout, Algebra, ContainerPolicy>::cbegin",
    "content": "",
    "url": "/cpp-api/nda/basic_array/cbegin/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_array/cbegin/"
  }
  ,"62": {
    "title": "nda::idx_map<Rank, StaticExtents, StrideOrder, LayoutProp>::ce_size",
    "content": "",
    "url": "/cpp-api/nda/idx_map/ce_size/",
    "brief": "Compile time size, 0 means “dynamical” .",
    "desc": "",
    "relUrl": "/cpp-api/nda/idx_map/ce_size/"
  }
  ,"63": {
    "title": "nda::range::cend",
    "content": "",
    "url": "/cpp-api/nda/range/cend/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/range/cend/"
  }
  ,"64": {
    "title": "nda::basic_array<ValueType, Rank, Layout, Algebra, ContainerPolicy>::cend",
    "content": "",
    "url": "/cpp-api/nda/basic_array/cend/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_array/cend/"
  }
  ,"65": {
    "title": "nda::basic_array_view<ValueType, Rank, Layout, Algebra, AccessorPolicy, OwningPolicy>::cend",
    "content": "",
    "url": "/cpp-api/nda/basic_array_view/cend/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_array_view/cend/"
  }
  ,"66": {
    "title": "nda::check_grouping",
    "content": "",
    "url": "/cpp-api/nda/check_grouping/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/check_grouping/"
  }
  ,"67": {
    "title": "nda::clef_auto_assign",
    "content": "",
    "url": "/cpp-api/nda/clef_auto_assign/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/clef_auto_assign/"
  }
  ,"68": {
    "title": "Code",
    "content": "Code . . Inline code | Syntax highlighted code blocks | Code blocks with rendered examples | . Inline code . Code can be rendered inline by wrapping it in single back ticks. . Lorem ipsum dolor sit amet, &lt;inline code snippet&gt; adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. . markdown Lorem ipsum dolor sit amet, `&lt;inline code snippet&gt;` adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. . . Syntax highlighted code blocks . Use Jekyll’s built-in syntax highlighting with Rouge for code blocks by using three backticks, followed by the language name: . js // Javascript code with syntax highlighting. var fun = function lang(l) { dateformat.i18n = require(&#39;./lang/&#39; + l) return true; } . js // Javascript code with syntax highlighting. var fun = function lang(l) { dateformat.i18n = require(&#39;./lang/&#39; + l) return true; } . . Code blocks with rendered examples . To demonstrate front end code, sometimes it’s useful to show a rendered example of that code. After including the styles from your project that you’ll need to show the rendering, you can use a &lt;div&gt; with the code-example class, followed by the code block syntax. If you want to render your output with Markdown instead of HTML, use the markdown=&quot;1&quot; attribute to tell Jekyll that the code you are rendering will be in Markdown format… This is about to get meta… . Link button . markdown [Link button](http://example.com/){: .btn } . &lt;div class=&quot;code-example&quot; markdown=&quot;1&quot;&gt; [Link button](http://example.com/){: .btn } &lt;/div&gt; markdown [Link button](http://example.com/){: .btn } .",
    "url": "/theme/ui-components/code/",
    "brief": "",
    "desc": "",
    "relUrl": "/theme/ui-components/code/"
  }
  ,"69": {
    "title": "Color",
    "content": "Color Utilities . . Light Greys | Dark Greys | Purples | Blues | Greens | Yellows | Reds | . All the colors used in Jek Theme TRIQS have been systematized into a series of variables that have been extended to both font color and background color utility classes. . Light Greys . Color value Font color utility Background color utility . grey-lt-000 | .text-grey-lt-000 | .bg-grey-lt-000 | . grey-lt-100 | .text-grey-lt-100 | .bg-grey-lt-100 | . grey-lt-200 | .text-grey-lt-200 | .bg-grey-lt-200 | . grey-lt-300 | .text-grey-lt-300 | .bg-grey-lt-300 | . Dark Greys . Color value Font color utility Background color utility . grey-dk-000 | .text-grey-dk-000 | .bg-grey-dk-000 | . grey-dk-100 | .text-grey-dk-100 | .bg-grey-dk-100 | . grey-dk-200 | .text-grey-dk-200 | .bg-grey-dk-200 | . grey-dk-250 | .text-grey-dk-250 | .bg-grey-dk-250 | . grey-dk-300 | .text-grey-dk-300 | .bg-grey-dk-300 | . Purples . Color value Font color utility Background color utility . purple-000 | .text-purple-000 | .bg-purple-000 | . purple-100 | .text-purple-100 | .bg-purple-100 | . purple-200 | .text-purple-200 | .bg-purple-200 | . purple-300 | .text-purple-300 | .bg-purple-300 | . Blues . Color value Font color utility Background color utility . blue-000 | .text-blue-000 | .bg-blue-000 | . blue-100 | .text-blue-100 | .bg-blue-100 | . blue-200 | .text-blue-200 | .bg-blue-200 | . blue-300 | .text-blue-300 | .bg-blue-300 | . Greens . Color value Font color utility Background color utility . green-000 | .text-green-000 | .bg-green-000 | . green-100 | .text-green-100 | .bg-green-100 | . green-200 | .text-green-200 | .bg-green-200 | . green-300 | .text-green-300 | .bg-green-300 | . Yellows . Color value Font color utility Background color utility . yellow-000 | .text-yellow-000 | .bg-yellow-000 | . yellow-100 | .text-yellow-100 | .bg-yellow-100 | . yellow-200 | .text-yellow-200 | .bg-yellow-200 | . yellow-300 | .text-yellow-300 | .bg-yellow-300 | . Reds . Color value Font color utility Background color utility . red-000 | .text-red-000 | .bg-red-000 | . red-100 | .text-red-100 | .bg-red-100 | . red-200 | .text-red-200 | .bg-red-200 | . red-300 | .text-red-300 | .bg-red-300 | .",
    "url": "/theme/utilities/color/",
    "brief": "",
    "desc": "",
    "relUrl": "/theme/utilities/color/"
  }
  ,"70": {
    "title": "nda::common_algebra",
    "content": "",
    "url": "/cpp-api/nda/common_algebra/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/common_algebra/"
  }
  ,"71": {
    "title": "Community",
    "content": "Community . . Issues and feature requests | Contributing to code and documentation | Google group | Code of Conduct | . Please do not open an issue on Github if you have questions regarding the usage of the code which are specific to your problem. Consult the documentation first. Should this not answer your question, feel free to contact other users and developers via the TRIQS Google group. . Issues and feature requests . Report bugs and feature requests directly on the Github issue page. In order to make it easier for us to address your issue, please use and complete theissue templates provided. . Contributing to code and documentation . We are happy to receive your improvements and extensions to the code and documentation as pull requests on Github. . Please coordinate the implementation of new features and major changes directly with the TRIQS developers. . Google group . We have set up a Google group as a platform for discussions with other users and developers. This channel is also used to announce new releases and code updates. . Code of Conduct . TRIQS is committed to fostering a welcoming community. . View our Code of Conduct on our GitHub repository. .",
    "url": "/community/",
    "brief": "",
    "desc": "",
    "relUrl": "/community/"
  }
  ,"72": {
    "title": "Configuration",
    "content": "Configuration . Jek Theme TRIQS has some specific configuration parameters that can be defined in your Jekyll site’s _config.yml file. . . Site logo | Search | Enable support for hyphenated search words: Aux links | Heading anchor links | Footer content | Google Analytics | | . View this site’s _config.yml file as an example. . Site logo . yaml # Set a path/url to a logo that will be displayed instead of the title logo: &quot;/assets/images/triqs-logo-v1.jpg&quot; . Search . yaml # Enable or disable the site search # Supports true (default) or false search_enabled: true . Enable support for hyphenated search words: . search_tokenizer_separator: /[ s/]+/ . Aux links . yaml # Aux links for the upper right navigation aux_links: &quot;Jek Theme TRIQS on GitHub&quot;: - &quot;//github.com/lizlove/jek-theme-triqs&quot; . Heading anchor links . yaml # Heading anchor links appear on hover over h1-h6 tags in page content # allowing users to deep link to a particular heading on a page. # # Supports true (default) or false/nil heading_anchors: true . Footer content . yaml # Footer content appears at the bottom of every page&#39;s main content footer_content: &#39;Copyright &amp;copy; 2017-2019 Cool People. Distributed by an &lt;a href=&quot;https://github.com/TRIQS/triqs/blob/2.2.x/LICENSE.txt&quot;&gt;MIT license.&lt;/a&gt;&#39; . Google Analytics . yaml # Google Analytics Tracking (optional) # e.g, UA-1234567-89 ga_tracking: UA-5555555-55 .",
    "url": "/theme/configuration/",
    "brief": "",
    "desc": "",
    "relUrl": "/theme/configuration/"
  }
  ,"73": {
    "title": "nda::conj",
    "content": "",
    "url": "/cpp-api/nda/conj/",
    "brief": "Maps conj onto the array .",
    "desc": "",
    "relUrl": "/cpp-api/nda/conj/"
  }
  ,"74": {
    "title": "nda::conj_r",
    "content": "",
    "url": "/cpp-api/nda/conj_r/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/conj_r/"
  }
  ,"75": {
    "title": "nda::range::const_iterator::const_iterator",
    "content": "",
    "url": "/cpp-api/nda/range/const_iterator/const_iterator-constructors/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/range/const_iterator/const_iterator-constructors/"
  }
  ,"76": {
    "title": "nda::range::const_iterator::~const_iterator",
    "content": "",
    "url": "/cpp-api/nda/range/const_iterator/const_iterator-destructor/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/range/const_iterator/const_iterator-destructor/"
  }
  ,"77": {
    "title": "nda::range::const_iterator",
    "content": "",
    "url": "/cpp-api/nda/range/const_iterator/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/range/const_iterator/"
  }
  ,"78": {
    "title": "sandbox::impl::convertible_to",
    "content": "",
    "url": "/cpp-api/sandbox/impl/convertible_to/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/sandbox/impl/convertible_to/"
  }
  ,"79": {
    "title": "nda::cos",
    "content": "",
    "url": "/cpp-api/nda/cos/",
    "brief": "Maps cos onto the array .",
    "desc": "",
    "relUrl": "/cpp-api/nda/cos/"
  }
  ,"80": {
    "title": "nda::cosh",
    "content": "",
    "url": "/cpp-api/nda/cosh/",
    "brief": "Maps cosh onto the array .",
    "desc": "",
    "relUrl": "/cpp-api/nda/cosh/"
  }
  ,"81": {
    "title": "Basic C++ Libraries",
    "content": "Basic C++ libraries . In this section, we group several small standalone basic C++ libraries. . They are small basic components on which the TRIQS library and applications are built. They are maintained by the TRIQS team. . | They can however be installed and used independently of TRIQS library and applications. . | They are released under the Apache2 License (while TRIQS is GPL). . | .     . nda A simple multidimensional array and view | itertools zip, enumerate, etc… Anticipating std::range | . mpi A basic layer to mpi | h5 A basic layer for HDF5 interface | .",
    "url": "/cpp-api/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/"
  }
  ,"82": {
    "title": "nda::dagger",
    "content": "",
    "url": "/cpp-api/nda/dagger/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/dagger/"
  }
  ,"83": {
    "title": "nda::basic_array_view<ValueType, Rank, Layout, Algebra, AccessorPolicy, OwningPolicy>::data_start",
    "content": "",
    "url": "/cpp-api/nda/basic_array_view/data_start/",
    "brief": "Starting point of the data. NB : this is NOT the beginning of the memory block for a view in general .",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_array_view/data_start/"
  }
  ,"84": {
    "title": "nda::basic_array<ValueType, Rank, Layout, Algebra, ContainerPolicy>::data_start",
    "content": "",
    "url": "/cpp-api/nda/basic_array/data_start/",
    "brief": "Starting point of the data. NB : this is NOT the beginning of the memory block for a view in general .",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_array/data_start/"
  }
  ,"85": {
    "title": "nda::decode",
    "content": "",
    "url": "/cpp-api/nda/decode/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/decode/"
  }
  ,"86": {
    "title": "nda::basic_array_view::deep_swap",
    "content": "",
    "url": "/cpp-api/nda/basic_array_view/deep_swap/",
    "brief": "Swaps the data in a and b .",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_array_view/deep_swap/"
  }
  ,"87": {
    "title": "nda::default_accessor",
    "content": "",
    "url": "/cpp-api/nda/default_accessor/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/default_accessor/"
  }
  ,"88": {
    "title": "nda::stdutil::dot_product",
    "content": "",
    "url": "/cpp-api/nda/stdutil/dot_product/",
    "brief": "Dot product of two arrays. .",
    "desc": "",
    "relUrl": "/cpp-api/nda/stdutil/dot_product/"
  }
  ,"89": {
    "title": "nda::ellipsis::ellipsis",
    "content": "",
    "url": "/cpp-api/nda/ellipsis/ellipsis-constructors/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/ellipsis/ellipsis-constructors/"
  }
  ,"90": {
    "title": "nda::ellipsis",
    "content": "",
    "url": "/cpp-api/nda/ellipsis/",
    "brief": "Ellipsis can be provided in place of range, as in python. The type ellipsis is similar to range_all except that it is implicitly repeated to as much as necessary. .",
    "desc": "",
    "relUrl": "/cpp-api/nda/ellipsis/"
  }
  ,"91": {
    "title": "nda::basic_array_view<ValueType, Rank, Layout, Algebra, AccessorPolicy, OwningPolicy>::empty",
    "content": "",
    "url": "/cpp-api/nda/basic_array_view/empty/",
    "brief": "size() == 0 .",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_array_view/empty/"
  }
  ,"92": {
    "title": "nda::basic_array<ValueType, Rank, Layout, Algebra, ContainerPolicy>::empty",
    "content": "",
    "url": "/cpp-api/nda/basic_array/empty/",
    "brief": "size() == 0 .",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_array/empty/"
  }
  ,"93": {
    "title": "nda::encode",
    "content": "",
    "url": "/cpp-api/nda/encode/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/encode/"
  }
  ,"94": {
    "title": "nda::basic_array<ValueType, Rank, Layout, Algebra, ContainerPolicy>::end",
    "content": "",
    "url": "/cpp-api/nda/basic_array/end/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_array/end/"
  }
  ,"95": {
    "title": "nda::basic_array_view<ValueType, Rank, Layout, Algebra, AccessorPolicy, OwningPolicy>::end",
    "content": "",
    "url": "/cpp-api/nda/basic_array_view/end/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_array_view/end/"
  }
  ,"96": {
    "title": "nda::range::end",
    "content": "",
    "url": "/cpp-api/nda/range/end/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/range/end/"
  }
  ,"97": {
    "title": "sandbox::ess1",
    "content": "",
    "url": "/cpp-api/sandbox/ess1/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/sandbox/ess1/"
  }
  ,"98": {
    "title": "nda::exp",
    "content": "",
    "url": "/cpp-api/nda/exp/",
    "brief": "Maps exp onto the array .",
    "desc": "",
    "relUrl": "/cpp-api/nda/exp/"
  }
  ,"99": {
    "title": "nda::basic_array<ValueType, Rank, Layout, Algebra, ContainerPolicy>::extent",
    "content": "",
    "url": "/cpp-api/nda/basic_array/extent/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_array/extent/"
  }
  ,"100": {
    "title": "nda::basic_array_view<ValueType, Rank, Layout, Algebra, AccessorPolicy, OwningPolicy>::extent",
    "content": "",
    "url": "/cpp-api/nda/basic_array_view/extent/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_array_view/extent/"
  }
  ,"101": {
    "title": "nda::eye",
    "content": "",
    "url": "/cpp-api/nda/eye/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/eye/"
  }
  ,"102": {
    "title": "sandbox::ess1<B>::f",
    "content": "",
    "url": "/cpp-api/sandbox/ess1/f/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/sandbox/ess1/f/"
  }
  ,"103": {
    "title": "sandbox::fPACK",
    "content": "",
    "url": "/cpp-api/sandbox/fPACK/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/sandbox/fPACK/"
  }
  ,"104": {
    "title": "Fake Thing",
    "content": "Greens Functions . . .",
    "url": "/main-concepts/fake-thing/",
    "brief": "",
    "desc": "",
    "relUrl": "/main-concepts/fake-thing/"
  }
  ,"105": {
    "title": "sandbox::faulty_array",
    "content": "",
    "url": "/cpp-api/sandbox/faulty_array/",
    "brief": "A doc of faulty_array .",
    "desc": "",
    "relUrl": "/cpp-api/sandbox/faulty_array/"
  }
  ,"106": {
    "title": "sandbox::fgh0",
    "content": "",
    "url": "/cpp-api/sandbox/fgh0/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/sandbox/fgh0/"
  }
  ,"107": {
    "title": "sandbox::fgh0b",
    "content": "",
    "url": "/cpp-api/sandbox/fgh0b/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/sandbox/fgh0b/"
  }
  ,"108": {
    "title": "sandbox::fgh3",
    "content": "",
    "url": "/cpp-api/sandbox/fgh3/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/sandbox/fgh3/"
  }
  ,"109": {
    "title": "sandbox::fgh3b",
    "content": "",
    "url": "/cpp-api/sandbox/fgh3b/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/sandbox/fgh3b/"
  }
  ,"110": {
    "title": "sandbox::fgh4",
    "content": "",
    "url": "/cpp-api/sandbox/fgh4/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/sandbox/fgh4/"
  }
  ,"111": {
    "title": "sandbox::fgh5",
    "content": "",
    "url": "/cpp-api/sandbox/fgh5/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/sandbox/fgh5/"
  }
  ,"112": {
    "title": "sandbox::fgh89",
    "content": "",
    "url": "/cpp-api/sandbox/fgh89/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/sandbox/fgh89/"
  }
  ,"113": {
    "title": "nda::range::first",
    "content": "",
    "url": "/cpp-api/nda/range/first/",
    "brief": "First index of the range .",
    "desc": "",
    "relUrl": "/cpp-api/nda/range/first/"
  }
  ,"114": {
    "title": "nda::floor",
    "content": "",
    "url": "/cpp-api/nda/floor/",
    "brief": "Maps floor onto the array .",
    "desc": "",
    "relUrl": "/cpp-api/nda/floor/"
  }
  ,"115": {
    "title": "nda::fold",
    "content": "",
    "url": "/cpp-api/nda/fold/",
    "brief": "",
    "desc": "fold computes f(f(r, a(0,0)), a(0,1), …) etc .",
    "relUrl": "/cpp-api/nda/fold/"
  }
  ,"116": {
    "title": "nda::for_each",
    "content": "",
    "url": "/cpp-api/nda/for_each/",
    "brief": "A loop in C order .",
    "desc": "",
    "relUrl": "/cpp-api/nda/for_each/"
  }
  ,"117": {
    "title": "nda::for_each_static",
    "content": "",
    "url": "/cpp-api/nda/for_each_static/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/for_each_static/"
  }
  ,"118": {
    "title": "nda::frobenius_norm",
    "content": "",
    "url": "/cpp-api/nda/frobenius_norm/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/frobenius_norm/"
  }
  ,"119": {
    "title": "nda::stdutil::front_append",
    "content": "",
    "url": "/cpp-api/nda/stdutil/front_append/",
    "brief": "Make a new std::array by appending one element at the front .",
    "desc": "",
    "relUrl": "/cpp-api/nda/stdutil/front_append/"
  }
  ,"120": {
    "title": "nda::stdutil::front_mpop",
    "content": "",
    "url": "/cpp-api/nda/stdutil/front_mpop/",
    "brief": "Make a new std::array by removing one element at the front .",
    "desc": "",
    "relUrl": "/cpp-api/nda/stdutil/front_mpop/"
  }
  ,"121": {
    "title": "nda::stdutil::front_pop",
    "content": "",
    "url": "/cpp-api/nda/stdutil/front_pop/",
    "brief": "Make a new std::array by removing one element at the front .",
    "desc": "",
    "relUrl": "/cpp-api/nda/stdutil/front_pop/"
  }
  ,"122": {
    "title": "sandbox::g45",
    "content": "",
    "url": "/cpp-api/sandbox/g45/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/sandbox/g45/"
  }
  ,"123": {
    "title": "sandbox::g46",
    "content": "",
    "url": "/cpp-api/sandbox/g46/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/sandbox/g46/"
  }
  ,"124": {
    "title": "nda::blas::gemm",
    "content": "",
    "url": "/cpp-api/nda/blas/gemm/",
    "brief": "Compute c .",
    "desc": "&lt; - alpha a*b + beta * c using BLAS dgemm or zgemm . : * c has the correct dimension given a, b. gemm does not resize the object, .",
    "relUrl": "/cpp-api/nda/blas/gemm/"
  }
  ,"125": {
    "title": "nda::blas::gemv",
    "content": "",
    "url": "/cpp-api/nda/blas/gemv/",
    "brief": "Calls gemv on a matrix, matrix_view, array, array_view of rank 2 .",
    "desc": "to compute c &lt; - alpha a*b + beta * c . : A, B, C have the same value_type and it is complex . or double : * c has the correct dimension given a, b. gemm does not resize the object,",
    "relUrl": "/cpp-api/nda/blas/gemv/"
  }
  ,"126": {
    "title": "nda::blas::gemv_generic",
    "content": "",
    "url": "/cpp-api/nda/blas/gemv_generic/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/blas/gemv_generic/"
  }
  ,"127": {
    "title": "nda::get_first_element",
    "content": "",
    "url": "/cpp-api/nda/get_first_element/",
    "brief": "Get the first element of the array as a(0,0,0….) (i.e. also work for non .",
    "desc": "containers, just with the concept !). .",
    "relUrl": "/cpp-api/nda/get_first_element/"
  }
  ,"128": {
    "title": "sandbox::impl::get_first_element",
    "content": "",
    "url": "/cpp-api/sandbox/impl/get_first_element/",
    "brief": "Get the first element of the array as a(0,0,0….) (i.e. also work for non .",
    "desc": "containers, just with the concept !). .",
    "relUrl": "/cpp-api/sandbox/impl/get_first_element/"
  }
  ,"129": {
    "title": "nda::blas::get_ld",
    "content": "",
    "url": "/cpp-api/nda/blas/get_ld/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/blas/get_ld/"
  }
  ,"130": {
    "title": "nda::blas::get_n_cols",
    "content": "",
    "url": "/cpp-api/nda/blas/get_n_cols/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/blas/get_n_cols/"
  }
  ,"131": {
    "title": "nda::blas::get_n_rows",
    "content": "",
    "url": "/cpp-api/nda/blas/get_n_rows/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/blas/get_n_rows/"
  }
  ,"132": {
    "title": "nda::rect_str<Rank, StaticExtents, StrideOrder, LayoutProp>::get_string_indices",
    "content": "",
    "url": "/cpp-api/nda/rect_str/get_string_indices/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/rect_str/get_string_indices/"
  }
  ,"133": {
    "title": "nda::blas::get_trans",
    "content": "",
    "url": "/cpp-api/nda/blas/get_trans/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/blas/get_trans/"
  }
  ,"134": {
    "title": "triqs::gf",
    "content": "TRIQS, Toolbox for Research on Interacting Quantum Systems . Explain that this is the TRIQS library itself. 🦖 For a complete index, see below. .",
    "url": "/triqs/gf/",
    "brief": "",
    "desc": "",
    "relUrl": "/triqs/gf/"
  }
  ,"135": {
    "title": "Green's Functions",
    "content": "Greens Functions . . Font size | Font weight | Line height | . Font size . Use the .fs-1 - .fs-10 to set an explicit font-size. . Class Small screen size font-size Large screen size font-size . .fs-1 | 9px | 10px | . .fs-2 | 11px | 12px | . .fs-3 | 12px | 14px | . .fs-4 | 14px | 16px | . .fs-5 | 16px | 18px | . .fs-6 | 18px | 24px | . .fs-7 | 24px | 32px | . .fs-8 | 32px | 38px | . .fs-9 | 38px | 42px | . .fs-10 | 42px | 48px | . Font size 1 . Font size 2 . Font size 3 . Font size 4 . Font size 5 . Font size 6 . Font size 7 . Font size 8 . Font size 9 . Font size 10 . markdown In Markdown, use the {: } wrapper to apply custom classes: . Font size 1 . Font size 2 . Font size 3 . Font size 4 . Font size 5 . Font size 6 . Font size 7 . Font size 8 . Font size 9 . Font size 10 . . Font weight . Use the .fw-300 - .fw-700 to set an explicit font-size. . Font weight 300 . Font weight 400 . Font weight 500 . Font weight 700 . markdown In Markdown, use the {: } wrapper to apply custom classes: . Font weight 300 . Font weight 400 . Font weight 500 . Font weight 700 . . Line height . Use the lh- classes to explicitly apply line height to text. . Class line-height value Notes . .lh-0 | 0 |   | . .lh-tight | 1.1 | Default for headings | . .lh-default | 1.4 | Default for body (paragraphs) | . No Line height No Line height . Tight line height Tight line height . Default line height Default line height . markdown In Markdown, use the {: } wrapper to apply custom classes: . No Line height No Line height . Tight line height Tight line height . Default line height Default line height . .",
    "url": "/main-concepts/greens-functions/",
    "brief": "",
    "desc": "",
    "relUrl": "/main-concepts/greens-functions/"
  }
  ,"136": {
    "title": "nda::grid_iterator<Rank>::grid_iterator",
    "content": "",
    "url": "/cpp-api/nda/grid_iterator/grid_iterator-constructors/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/grid_iterator/grid_iterator-constructors/"
  }
  ,"137": {
    "title": "nda::grid_iterator::~grid_iterator",
    "content": "",
    "url": "/cpp-api/nda/grid_iterator/grid_iterator-destructor/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/grid_iterator/grid_iterator-destructor/"
  }
  ,"138": {
    "title": "nda::grid_iterator",
    "content": "",
    "url": "/cpp-api/nda/grid_iterator/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/grid_iterator/"
  }
  ,"139": {
    "title": "nda::grid_iterator<1>",
    "content": "",
    "url": "/cpp-api/nda/grid_iterator%3C1%3E/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/grid_iterator<1>/"
  }
  ,"140": {
    "title": "nda::group_indices_layout",
    "content": "",
    "url": "/cpp-api/nda/group_indices_layout/",
    "brief": "Regroup indices for a C array .",
    "desc": "Usage : group_indices_view(A, std::index_{0,1}, {2,3}) Precondition : - every indices is listed in the {…} exactly once. - the indices in one group are consecutive in memory. .",
    "relUrl": "/cpp-api/nda/group_indices_layout/"
  }
  ,"141": {
    "title": "nda::group_indices_view",
    "content": "",
    "url": "/cpp-api/nda/group_indices_view/",
    "brief": "————— Grouping indices———————— .",
    "desc": "",
    "relUrl": "/cpp-api/nda/group_indices_view/"
  }
  ,"142": {
    "title": "nda::has_contiguous",
    "content": "",
    "url": "/cpp-api/nda/has_contiguous/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/has_contiguous/"
  }
  ,"143": {
    "title": "nda::has_smallest_stride_is_one",
    "content": "",
    "url": "/cpp-api/nda/has_smallest_stride_is_one/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/has_smallest_stride_is_one/"
  }
  ,"144": {
    "title": "nda::has_strided_1d",
    "content": "",
    "url": "/cpp-api/nda/has_strided_1d/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/has_strided_1d/"
  }
  ,"145": {
    "title": "nda::heap",
    "content": "",
    "url": "/cpp-api/nda/heap/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/heap/"
  }
  ,"146": {
    "title": "nda::heap_custom_alloc",
    "content": "",
    "url": "/cpp-api/nda/heap_custom_alloc/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/heap_custom_alloc/"
  }
  ,"147": {
    "title": "nda::idx_group_t",
    "content": "",
    "url": "/cpp-api/nda/idx_group_t/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/idx_group_t/"
  }
  ,"148": {
    "title": "nda::idx_map<Rank, StaticExtents, StrideOrder, LayoutProp>::idx_map",
    "content": "",
    "url": "/cpp-api/nda/idx_map/idx_map-constructors/",
    "brief": "Default constructor. Strides are not initiliazed. .",
    "desc": "",
    "relUrl": "/cpp-api/nda/idx_map/idx_map-constructors/"
  }
  ,"149": {
    "title": "nda::idx_map",
    "content": "",
    "url": "/cpp-api/nda/idx_map/",
    "brief": "The layout that maps the indices to linear index. .",
    "desc": "Basically lengths and strides for each dimensions . StrideOrder[0] : the slowest index, StrideOrder[Rank-1] : the fastest index Example : 012 : C the last index is the fastest 210 : Fortran, the first index is the fastest 120 : storage (i,j,k) is : index j is slowest, then k, then i NB : StrideOrder = 0 is the default and it is means 0 order .",
    "relUrl": "/cpp-api/nda/idx_map/"
  }
  ,"150": {
    "title": "nda::imag",
    "content": "",
    "url": "/cpp-api/nda/imag/",
    "brief": "Maps imag onto the array .",
    "desc": "",
    "relUrl": "/cpp-api/nda/imag/"
  }
  ,"151": {
    "title": "sandbox::impl",
    "content": "",
    "url": "/cpp-api/sandbox/impl/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/sandbox/impl/"
  }
  ,"152": {
    "title": "Home",
    "content": "Focus on writing good documentation . TRIQS (Toolbox for Research on Interacting Quantum Systems) is a set of C++ and Python libraries for the study of interacting quantum systems. . Get started now View on GitHub . . Getting started . Dependencies . Jek Theme TRIQS is built for Jekyll, a static site generator. View the quick start guide for more information. Jek Theme TRIQS requires no special plugins and can run on GitHub Pages’ standard Jekyll compiler. . TRIQS is composed of libraries in two languages: 1. Python libraries implement the most common many-body objects, like Green’s functions, in user-friendly scripts. 2. C++ libraries enable users to quickly develop high-performance low-level codes . This duality is a real advantage in the development of new many-body tools. Critical parts where performance is essential can be written in C++ (e.g. a quantum impurity solver) while data analysis, preparation of inputs or interface with other programs can be handled in more user-friendly Python scripts. . Quick start: Code in the browser . Access TRIQS remotely via Binder as a Jupyter Notebook. . yaml remote_theme: lizlove/jek-theme-triqs . You must have GitHub Pages enabled on your repo, one or more Markdown files, and a _config.yml file. See an example repository . Local installation: Use a package installer . Install with Ubuntu . Install in a Docker container . yaml blah blah . Install in a Singularity Container . Step one of Singularity installation | bash $ bundle something fun together. . Run you local Jekyll server | bash $ jekyll serve . bash # .. or if you&#39;re using a Gemfile (bundler) $ bundle exec jekyll serve . Point your web browser to http://localhost:4000 | If you’re hosting your site on GitHub Pages, set up GitHub Pages and Jekyll locally so that you can more easily work in your development environment. . Compile from Source . See configuration options | . . About the project . The TRIQS library was orginally authored by: . O. Parcollet (IPhT, CEA-Saclay) and M. Ferrero (CPHT, Ecole Polytechique). . It is currently maintained by: . O. Parcollet (Flatiron Institute, CCQ) and N. Wentzell (Flatiron Institute, CCQ). . Other developers include: . Krivenko, T. Ayral, H. Strand, D. Simons, H. Hafermann, L. Messio, P. Seth. . TRIQS is supported by ERC under Grant Number 278472. . Citation . TRIQS is a part of our scientific work and we kindly request that projects using it include a citation to the following paper. In order to help you, we provide a BibTeX entry [1]. . [1] O. Parcollet, M. Ferrero, T. Ayral, H. Hafermann, I. Krivenko, L. Messio, and P. Seth, Comp. Phys. Comm. 196, 398-415 (2015) (bibtex file) . If you find TRIQS useful, giving proper reference and citation is indeed a simple way to help convincing funding sources that such projects are useful for our community and should be supported. . License . Jek Theme TRIQS is distributed by an GNU General Public License, version 3. Note that this implies that applications using TRIQS must also be GPL. . Disclaimer . As stated by the License, the program is provided as is, i.e. WITHOUT ANY WARRANTY of any kind, as stated in the license. In particular, its authors and contributors will take no responsability for any possible bugs or any improper use of these programs, including those resulting in incorrect scientific publications. . Thank you to the contributors of TRIQS! . .",
    "url": "/",
    "brief": "",
    "desc": "",
    "relUrl": "/"
  }
  ,"153": {
    "title": "nda::basic_array_view<ValueType, Rank, Layout, Algebra, AccessorPolicy, OwningPolicy>::indexmap",
    "content": "",
    "url": "/cpp-api/nda/basic_array_view/indexmap/",
    "brief": "The Index Map object .",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_array_view/indexmap/"
  }
  ,"154": {
    "title": "nda::basic_array<ValueType, Rank, Layout, Algebra, ContainerPolicy>::indexmap",
    "content": "",
    "url": "/cpp-api/nda/basic_array/indexmap/",
    "brief": "The Index Map object .",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_array/indexmap/"
  }
  ,"155": {
    "title": "Installation",
    "content": "Installation . C++ version . nda is a C++20/17 library. It has been tested on gcc &gt;= 9, clang 10. | The documentation is generated in C++20, in order to have the concepts properly documented, but it can also be used in C++17. | Previous versions of C++ are not supported. | . WE NEED HERE A STANDARD PAGE FOR ALL PACKAGES . Packages . First use packages | . Source installation . Deps . source install cmake . | link to the app4triqs (RENAME) to show the deps systems. . | A little example of a cmake project using nda ?? . | .",
    "url": "/cpp-api/nda/install/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/install/"
  }
  ,"156": {
    "title": "nda::inverse",
    "content": "",
    "url": "/cpp-api/nda/inverse/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/inverse/"
  }
  ,"157": {
    "title": "nda::idx_map<Rank, StaticExtents, StrideOrder, LayoutProp>::is_contiguous",
    "content": "",
    "url": "/cpp-api/nda/idx_map/is_contiguous/",
    "brief": "Is the data contiguous in memory ? [NB recomputed at each call] .",
    "desc": "",
    "relUrl": "/cpp-api/nda/idx_map/is_contiguous/"
  }
  ,"158": {
    "title": "nda::basic_array_view<ValueType, Rank, Layout, Algebra, AccessorPolicy, OwningPolicy>::is_empty",
    "content": "",
    "url": "/cpp-api/nda/basic_array_view/is_empty/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_array_view/is_empty/"
  }
  ,"159": {
    "title": "nda::basic_array<ValueType, Rank, Layout, Algebra, ContainerPolicy>::is_empty",
    "content": "",
    "url": "/cpp-api/nda/basic_array/is_empty/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_array/is_empty/"
  }
  ,"160": {
    "title": "sandbox::is_integral",
    "content": "",
    "url": "/cpp-api/sandbox/is_integral/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/sandbox/is_integral/"
  }
  ,"161": {
    "title": "nda::idx_map<Rank, StaticExtents, StrideOrder, LayoutProp>::is_stride_order_C",
    "content": "",
    "url": "/cpp-api/nda/idx_map/is_stride_order_C/",
    "brief": "Is the order in memory C ? .",
    "desc": "",
    "relUrl": "/cpp-api/nda/idx_map/is_stride_order_C/"
  }
  ,"162": {
    "title": "nda::basic_array<ValueType, Rank, Layout, Algebra, ContainerPolicy>::is_stride_order_C",
    "content": "",
    "url": "/cpp-api/nda/basic_array/is_stride_order_C/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_array/is_stride_order_C/"
  }
  ,"163": {
    "title": "nda::basic_array_view<ValueType, Rank, Layout, Algebra, AccessorPolicy, OwningPolicy>::is_stride_order_C",
    "content": "",
    "url": "/cpp-api/nda/basic_array_view/is_stride_order_C/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_array_view/is_stride_order_C/"
  }
  ,"164": {
    "title": "nda::idx_map<Rank, StaticExtents, StrideOrder, LayoutProp>::is_stride_order_Fortran",
    "content": "",
    "url": "/cpp-api/nda/idx_map/is_stride_order_Fortran/",
    "brief": "Is the order in memory Fortran ? .",
    "desc": "",
    "relUrl": "/cpp-api/nda/idx_map/is_stride_order_Fortran/"
  }
  ,"165": {
    "title": "nda::basic_array<ValueType, Rank, Layout, Algebra, ContainerPolicy>::is_stride_order_Fortran",
    "content": "",
    "url": "/cpp-api/nda/basic_array/is_stride_order_Fortran/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_array/is_stride_order_Fortran/"
  }
  ,"166": {
    "title": "nda::basic_array_view<ValueType, Rank, Layout, Algebra, AccessorPolicy, OwningPolicy>::is_stride_order_Fortran",
    "content": "",
    "url": "/cpp-api/nda/basic_array_view/is_stride_order_Fortran/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_array_view/is_stride_order_Fortran/"
  }
  ,"167": {
    "title": "nda::idx_map<Rank, StaticExtents, StrideOrder, LayoutProp>::is_strided_1d",
    "content": "",
    "url": "/cpp-api/nda/idx_map/is_strided_1d/",
    "brief": "Is the data strided 1d in memory ? [NB recomputed at each call] .",
    "desc": "",
    "relUrl": "/cpp-api/nda/idx_map/is_strided_1d/"
  }
  ,"168": {
    "title": "nda::isnan",
    "content": "",
    "url": "/cpp-api/nda/isnan/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/isnan/"
  }
  ,"169": {
    "title": "nda::stdutil::join",
    "content": "",
    "url": "/cpp-api/nda/stdutil/join/",
    "brief": "Join two arrays .",
    "desc": "",
    "relUrl": "/cpp-api/nda/stdutil/join/"
  }
  ,"170": {
    "title": "Labels",
    "content": "Labels . Use labels as a way to add an additional mark to a section of your docs. Labels come in a few colors. By default, labels will be blue. . Default label . Blue label . Stable . New release . Coming soon . Deprecated . markdown Default label . Blue label . Stable . New release . Coming soon . Deprecated . .",
    "url": "/theme/ui-components/labels/",
    "brief": "",
    "desc": "",
    "relUrl": "/theme/ui-components/labels/"
  }
  ,"171": {
    "title": "nda::range::last",
    "content": "",
    "url": "/cpp-api/nda/range/last/",
    "brief": "Last index of the range + 1 (as in Python or STL). .",
    "desc": "",
    "relUrl": "/cpp-api/nda/range/last/"
  }
  ,"172": {
    "title": "Layout",
    "content": "Layout Utilities . . Spacing | Vertical Alignment | Display heading 3 | heading 3 | | . Spacing . These spacers are available to use for margins and padding with responsive utility classes. Combine these prefixes with a screen size and spacing scale to use them responsively. . Classname prefix What it does . .m- | margin | . .mx- | margin-left, margin-right | . .my- | margin top, margin bottom | . .mt- | margin-top | . .mr- | margin-right | . .mb- | margin-bottom | . .ml- | margin-left | . Classname prefix What it does . .p- | padding | . .px- | padding-left, padding-right | . .py- | padding top, padding bottom | . .pt- | padding-top | . .pr- | padding-right | . .pb- | padding-bottom | . .pl- | padding-left | . Spacing values are based on a 1rem = 16px spacing scale, broken down into these units: . Spacer/suffix Size in rems Rem converted to px . 1 | 0.25rem | 4px | . 2 | 0.5rem | 8px | . 3 | 0.75rem | 12px | . 4 | 1rem | 16px | . 5 | 1.5rem | 24px | . 6 | 2rem | 32px | . 7 | 2.5rem | 40px | . 8 | 3rem | 48px | . Examples . In Markdown, use the {: } wrapper to apply custom classes: . markdown This paragraph will have a margin bottom of 1rem/16px at large screens. . This paragraph will have 2rem/32px of padding on the right and left at all screen sizes. . . Vertical Alignment . Classname What it does . .v-align-baseline | vertical-align: baseline | . .v-align-bottom | vertical-align: bottom | . .v-align-middle | vertical-align: middle | . .v-align-text-bottom | vertical-align: text-bottom | . .v-align-text-top | vertical-align: text-top | . .v-align-top | vertical-align: top | . Display . Display classes aid in adapting the layout of the elements on a page: . Class   . .d-block | display: block | . .d-flex | display: flex | . .d-inline | display: inline | . .d-inline-block | display: inline-block | . .d-none | display: none | . Use these classes in conjunction with the responsive modifiers. . Examples . In Markdown, use the {: } wrapper to apply custom classes: . markdown This button will be hidden until medium screen sizes: . A button . These headings will be inline-block: . heading 3 . heading 3 . .",
    "url": "/theme/utilities/layout/",
    "brief": "",
    "desc": "",
    "relUrl": "/theme/utilities/layout/"
  }
  ,"173": {
    "title": "nda::layout_info_t::~layout_info_t",
    "content": "",
    "url": "/cpp-api/nda/layout_info_t/layout_info_t-destructor/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/layout_info_t/layout_info_t-destructor/"
  }
  ,"174": {
    "title": "nda::layout_info_t",
    "content": "",
    "url": "/cpp-api/nda/layout_info_t/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/layout_info_t/"
  }
  ,"175": {
    "title": "nda::idx_map<Rank, StaticExtents, StrideOrder, LayoutProp>::lengths",
    "content": "",
    "url": "/cpp-api/nda/idx_map/lengths/",
    "brief": "Lengths of each dimension. .",
    "desc": "",
    "relUrl": "/cpp-api/nda/idx_map/lengths/"
  }
  ,"176": {
    "title": "Lists",
    "content": "Lists . . Unordered list | Ordered list | Task list | Definition list | . Most lists can be rendered with pure Markdown. . Unordered list . Item 1 | Item 2 | Item 3 | . or . Item 1 | Item 2 | Item 3 | . markdown - Item 1 - Item 2 - Item 3 . or . Item 1 | Item 2 | Item 3 | . Ordered list . Item 1 | Item 2 | Item 3 | markdown 1. Item 1 1. Item 2 1. Item 3 . Task list . [ ] hello, this is a todo item | [ ] hello, this is another todo item | [x] goodbye, this item is done | . markdown - [ ] hello, this is a todo item - [ ] hello, this is another todo item - [x] goodbye, this item is done . Definition list . Definition lists require HTML syntax and aren’t supported with the GitHub Flavored Markdown compiler. . Name Godzilla Born 1952 Birthplace Japan Color Green html . Name Godzilla Born 1952 Birthplace Japan Color Green .",
    "url": "/theme/ui-components/lists/",
    "brief": "",
    "desc": "",
    "relUrl": "/theme/ui-components/lists/"
  }
  ,"177": {
    "title": "triqs::liz-thing",
    "content": "TRIQS, Toolbox for Research on Interacting Quantum Systems . Explain that this is the TRIQS library itself. 🦖 For a complete index, see below. .",
    "url": "/triqs/liz-thing/",
    "brief": "",
    "desc": "",
    "relUrl": "/triqs/liz-thing/"
  }
  ,"178": {
    "title": "nda::log",
    "content": "",
    "url": "/cpp-api/nda/log/",
    "brief": "Maps log onto the array .",
    "desc": "",
    "relUrl": "/cpp-api/nda/log/"
  }
  ,"179": {
    "title": "Main Concepts",
    "content": "Main Concepts . This is the section where ideas are introduced. .",
    "url": "/main-concepts/",
    "brief": "",
    "desc": "",
    "relUrl": "/main-concepts/"
  }
  ,"180": {
    "title": "nda::make_array_const_view",
    "content": "",
    "url": "/cpp-api/nda/make_array_const_view/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/make_array_const_view/"
  }
  ,"181": {
    "title": "nda::make_array_view",
    "content": "",
    "url": "/cpp-api/nda/make_array_view/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/make_array_view/"
  }
  ,"182": {
    "title": "nda::make_const_view",
    "content": "",
    "url": "/cpp-api/nda/make_const_view/",
    "brief": "Make a view const .",
    "desc": "",
    "relUrl": "/cpp-api/nda/make_const_view/"
  }
  ,"183": {
    "title": "nda::stdutil::make_initialized_array",
    "content": "",
    "url": "/cpp-api/nda/stdutil/make_initialized_array/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/stdutil/make_initialized_array/"
  }
  ,"184": {
    "title": "nda::make_matrix_view",
    "content": "",
    "url": "/cpp-api/nda/make_matrix_view/",
    "brief": "————— make_matrix_view———————— .",
    "desc": "",
    "relUrl": "/cpp-api/nda/make_matrix_view/"
  }
  ,"185": {
    "title": "nda::make_regular",
    "content": "",
    "url": "/cpp-api/nda/make_regular/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/make_regular/"
  }
  ,"186": {
    "title": "nda::stdutil::make_std_array",
    "content": "",
    "url": "/cpp-api/nda/stdutil/make_std_array/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/stdutil/make_std_array/"
  }
  ,"187": {
    "title": "sandbox::maker",
    "content": "",
    "url": "/cpp-api/sandbox/maker/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/sandbox/maker/"
  }
  ,"188": {
    "title": "sandbox::maker2",
    "content": "",
    "url": "/cpp-api/sandbox/maker2/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/sandbox/maker2/"
  }
  ,"189": {
    "title": "nda::map",
    "content": "",
    "url": "/cpp-api/nda/map/",
    "brief": "",
    "desc": "Maps a function onto the array (elementwise) . nda_map.cpp .",
    "relUrl": "/cpp-api/nda/map/"
  }
  ,"190": {
    "title": "nda::map_layout_transform",
    "content": "",
    "url": "/cpp-api/nda/map_layout_transform/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/map_layout_transform/"
  }
  ,"191": {
    "title": "nda::basic_array_view::map_layout_transform",
    "content": "",
    "url": "/cpp-api/nda/basic_array_view/map_layout_transform/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_array_view/map_layout_transform/"
  }
  ,"192": {
    "title": "nda::basic_array::map_layout_transform",
    "content": "",
    "url": "/cpp-api/nda/basic_array/map_layout_transform/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_array/map_layout_transform/"
  }
  ,"193": {
    "title": "nda::mapped",
    "content": "",
    "url": "/cpp-api/nda/mapped/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/mapped/"
  }
  ,"194": {
    "title": "Markdown",
    "content": "Markdown Kitchen Sink . Text can be bold, italic, or ~~strikethrough~~. . Link to another page. . There should be whitespace between paragraphs. . There should be whitespace between paragraphs. We recommend including a README, or a file with information about your project. . Header 1 . This is a normal paragraph following a header. GitHub is a code hosting platform for version control and collaboration. It lets you and others work together on projects from anywhere. . Header 2 . This is a blockquote following a header. . When something is important enough, you do it even if the odds are not in your favor. . Header 3 . js // Javascript code with syntax highlighting. var fun = function lang(l) { dateformat.i18n = require(&#39;./lang/&#39; + l) return true; } . ruby # Ruby code with syntax highlighting GitHubPages::Dependencies.gems.each do |gem, version| s.add_dependency(gem, &quot;= #{version}&quot;) end . Header 4 . This is an unordered list following a header. | This is an unordered list following a header. | This is an unordered list following a header. | . Header 5 . This is an ordered list following a header. | This is an ordered list following a header. | This is an ordered list following a header. | Header 6 . head1 head two three . ok | good swedish fish | nice | . out of stock | good and plenty | nice | . ok | good oreos | hmm | . ok | good zoute drop | yumm | . There’s a horizontal rule below this. . . Here is an unordered list: . Item foo | Item bar | Item baz | Item zip | . And an ordered list: . Item one | Item two | Item three | Item four | And a nested list: . level 1 item level 2 item | level 2 item level 3 item | level 3 item | . | . | level 1 item level 2 item | level 2 item | level 2 item | . | level 1 item level 2 item | level 2 item | . | level 1 item | . Nesting an ol in ul in an ol . level 1 item (ul) level 2 item (ol) | level 2 item (ol) - level 3 item (ul) - level 3 item (ul) | | level 1 item (ul) level 2 item (ol) | level 2 item (ol) - level 3 item (ul) - level 3 item (ul) | level 4 item (ol) | level 4 item (ol) - level 3 item (ul) - level 3 item (ul) | | level 1 item (ul) | . And a task list . [ ] Hello, this is a TODO item | [ ] Hello, this is another TODO item | [x] Goodbye, this item is done | . Small image . . Large image . . Definition lists can be used with HTML syntax. . Name Godzilla Born 1952 Birthplace Japan Color Green Long, single-line code blocks should not wrap. They should horizontally scroll if they are too long. This line should be long enough to demonstrate this. . The final element. .",
    "url": "/theme/ui-components/markdown/",
    "brief": "",
    "desc": "",
    "relUrl": "/theme/ui-components/markdown/"
  }
  ,"195": {
    "title": "nda::matmul",
    "content": "",
    "url": "/cpp-api/nda/matmul/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/matmul/"
  }
  ,"196": {
    "title": "nda::matvecmul",
    "content": "",
    "url": "/cpp-api/nda/matvecmul/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/matvecmul/"
  }
  ,"197": {
    "title": "nda::max_element",
    "content": "",
    "url": "/cpp-api/nda/max_element/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/max_element/"
  }
  ,"198": {
    "title": "nda::min_element",
    "content": "",
    "url": "/cpp-api/nda/min_element/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/min_element/"
  }
  ,"199": {
    "title": "nda::idx_map<Rank, StaticExtents, StrideOrder, LayoutProp>::min_stride",
    "content": "",
    "url": "/cpp-api/nda/idx_map/min_stride/",
    "brief": "Value of the minimum stride (i.e the fastest one) .",
    "desc": "",
    "relUrl": "/cpp-api/nda/idx_map/min_stride/"
  }
  ,"200": {
    "title": "MC tools",
    "content": "Monte Carlo Tools . . Tutorial | A collapsible section with markdown writing someting | The C++ code for this problem | Initializing the MPI | Constructing the Monte Carlo simulation | Moves and measures | The move | The measure | Starting the Monte Carlo simulation | End of the simulation - gathering results | Writing your own Monte Carlo simulation | | . SOME TEXT is to be written here, but it is long . &lt;% import numpy as np import matplotlib.pyplot as plt . x1 = np.linspace(0.0, 5.0) x2 = np.linspace(0.0, 2.0) . y1 = np.cos(0.5 * np.pi * x1) * np.exp(-x1) y2 = np.cos(2 * np.pi * x2) . plt.subplot(2, 1, 1) plt.plot(x1, y1, ‘o-‘) plt.title(‘A tale of 2 subplots’) plt.ylabel(‘Damped oscillation’) . plt.subplot(2, 1, 2) plt.plot(x2, y2, ‘.-‘) plt.xlabel(‘time (s)’) plt.ylabel(‘Undamped’) %&gt; . IMAGE IS presented ABOVE . c++ template&lt;typename T, int R&gt; struct A; . template&lt;typename T, int R&gt; struct A; . and in ~~python~~ . def f(x): a = [1,2,3] return a . Some text &lt;% inline stuff %&gt; . and a block . which ends hre . TOC | . Tutorial . LINK . LINK . A collapsible section with markdown . Click to expand! ## Heading 1. A numbered 2. list * With some * Sub bullets I want to writein read . And the . {::mytension} . writing someting . ee: 1 … {:/mytension} . n order to have a first overview of the main features of the mc_generic class, let’s start with a concrete Monte Carlo code. We will consider maybe the simplest problem ever: a single spin in a magnetic field (h) at a temperature (1/ beta). The Hamiltonian is simply: . H=−h(n↑−n↓). mathcal{H} = - h (n_ uparrow - n_ downarrow).H=−h(n↑​−n↓​). . You want to compute the magnetization of this single spin. From statistical mechanics it is clearly just . m=exp⁡(βh)−exp⁡(−βh)exp⁡(βh)+exp⁡(−βh)m = frac{ exp( beta h) - exp(- beta h)}{ exp( beta h) + exp(- beta h)}m=exp(βh)+exp(−βh)exp(βh)−exp(−βh)​ . The C++ code for this problem . Let’s see how we can get this result from a Monte Carlo simulation. Here is a code that would do the job. Note that we put everything in one file here, but obviously you would usually want to cut this into pieces for clarity: . ./overview _ex.cpp Let’s go through the different parts of this code. First we look at main(). . Initializing the MPI . As you will see, the Monte Carlo class is completely MPI ready. The first two lines of the main() just initialize the MPI environment and declare a communicator. The default communicator is WORLD which means that all the nodes will be involved in the calculation: . cpp triqs::mpi::environment env(argc, argv); triqs::mpi::communicator world; . Constructing the Monte Carlo simulation . The lines that follow, define the parameters of the Monte Carlo simulation and construct a Monte Carlo object called SpinMC: . cpp int n_cycles = 5000000; int length_cycle = 10; int n_warmup_cycles = 10000; std::string random_name = “”; int random_seed = 374982 + world.rank() * 273894; int verbosity = (world.rank() == 0 ? 2: 0); . triqs::mc_tools::mc_generic SpinMC(random_name, random_seed, initial_sign, verbosity); . The SpinMC is an instance of the mc_generic class. First of all, note that you need to include the header &lt;triqs/mc_tools/mc_generic.hpp&gt; in order to access the mc_generic class. The mc_generic class is a template on the type of the Monte Carlo sign. Usually this will be either a double or a complex&lt;double&gt;. . The first two arguments define the random number generator by giving its name in random_name (an empty string means the default generator, i.e. the Mersenne Twister) and the random seed in random_seed. As you see the seed is different for all node with the use of world.rank(). . The third argument is the sign of the very first configuration of the simulation. Because the accept method only returns a ratio, this initial sign is used to determine the sign of all generated configurations. . Finally, the last parameter sets the verbosity level. 0 means no output, 1 will output the progress level for the current node and 2 additionally shows some statistics about the simulation when you call collect_results. As you see, we have put verbosity to 2 only for the master node and 0 for all the other ones. This way the information will be printed only by the master. . Moves and measures . At this stage the basic structure of the Monte Carlo is in SpinMC. But we now need to tell it what moves must be tried and what measures must be made. This is done with: . overview _ex.cpp The method add_move expects a move and a name, while add_measure expects a measure and a name. The name can be anything, but different measures must have different names. In this example, the move is an instance of the flip class and the measure an instance of the compute_m class. These classes have been defined in the beginning of the code and they have no direct connection with the mc_generic class (e.g. they don’t have inheritance links with mc_generic). Actually you are almost completely free to design these classes as you want, as long as they satisfy the correct concept. . The move . Let’s go back to the beginning of the code and have a look at the flip class which proposed a flip of the spin. The class is very short. It has a constructor which might define some class variables. But more importantly, it has three member functions that any move must have: attempt, accept and reject: . overview _ex.cpp The attempt method is called by the Monte Carlo loop in order to try a new move. The Monte Carlo class doesn’t care about what this trial is. All that matters for the loop is the Metropolis ratio describing the transition to a new proposed configuration. It is precisely this ratio that the attempt method is expected to return: . T=Py,xρ(y)Px,yρ(x)T = frac{P_{y,x} rho(y)}{P_{x,y} rho(x)}T=Px,y​ρ(x)Py,x​ρ(y)​ . In our example this ratio is . T=eβh−σeβhσ=e−2βhσT = frac{e^{ beta h - sigma }}{e^{ beta h sigma}} = e^{ - 2 beta h sigma }T=eβhσeβh−σ​=e−2βhσ . With this ratio, the Monte Carlo loop decides whether this proposed move should be rejected, or accepted. If the move is accepted, the Monte Carlo calls the accept method of the move, otherwise it calls the reject method. The accept method should always return 1.0 unless you want to correct the sign only when moves are accepted for performance reasons (this rather special case is described in the full documentation/manual/triqs &lt;montecarloref&gt;). Note that the return type of attempt and accept has to be the same as the template of the Monte Carlo class. In our example, nothing has to be done if the move is rejected. If it is accepted, the spin should be flipped. . The measure . Just in the same way, the measures are expected to satisfy a concept. Let’s look at compute_m. . overview _ex.cpp Here only two methods are expected, accumulate and collect_results. The method accumulate is called every length_cycle Monte Carlo loops. It takes one argument which is the current sign in the Monte Carlo simulation. Here, we sum the sign in Z (the partition function) and the magnetization in M. The other method collect_results is usually called just once at the very end of the simulation, see below. It is meant to do the final operations that are needed to have your result. Here it just needs to divide M by Z and prints the result on the screen. Note that, it takes the MPI communicator as an argument, meaning that you can easily do MPI operations here. This makes sense because the accumulation will have taken place independently on all nodes and this is the good moment to gather the information from all the nodes. This is why you see reduce operations on the master node here. . Starting the Monte Carlo simulation . Well, at this stage we’re ready to launch our simulation. The moves and measures have been specified, so all you need to do now is start the simulation with: . cpp SpinMC.warmup_and_accumulate(n_warmup_cycles, n_cycles, length_cycle, triqs::utility::clock_callback(600)); . The warmup method takes several arguments. . The first three parameters determine the warmup length, number of measurements and the length of the Monte Carlo cycles. The definition of these variables has been detailed earlier in montecarloloop. . The last argument is used to decide if the simulation must be stopped for some reason before it reaches the full number of cycles n_cycles. For example, you might be running your code on a cluster that only allows for 1 hour simulations. In that case, you would want your simulation to stop, say after 55 minutes, even if it didn’t manage to do the n_cycles cycles. . In practice, the second argument is a std::function&lt;bool ()&gt; which is called at the end of every cycle. If it returns 0 the simulation goes on, if it returns 1 the simulation stops. In this example, we used a function clock_callback(600) which starts returning 1 after 600 seconds. It is defined in the header &lt;triqs/utility/callbacks.hpp&gt;. This way the simulation will last at most 10 minutes. . Note that the simulation would end cleanly. The rest of the code can safely gather results from the statistics that has been accumulated, even if there have been less than n_cycles cycles. . End of the simulation - gathering results . When the simulation is over, it is time to gather the results. This is done by calling: . cpp SpinMC.collect_results(world); . In practice this method goes through all the measurements that have been added to the simulation and calls their collect_results member. As described above, this does the final computations needed to get the result you are interested in. It usually also saves or prints these results. . Writing your own Monte Carlo simulation . I hope that this simple example gave you an idea about how to use the mc_generic class. In the next chapter we will address some more advanced issues, but you should already be able to implement a Monte Carlo simulation of your own. Maybe the only point that we haven’t addressed and which is useful, is how to generate random numbers. Actually, as soon as you have generated an instance of a mc_generic class, like SpinMC above, you automatically have an acces to a random number generator with: . cpp triqs::mc_tools::random_generator RNG = SpinMC.get_rng(); . RNG is an instance of a random_generator. If you want to generate a double number on the interval ([0,1[), you just have to call RNG(). By providing an argument to RNG you can generate integer and real numbers on different intervals. This is described in detail in the section Random number generator &lt;random&gt;. . That’s it! Why don’t you try to write your own Monte Carlo describing an Ising chain in a field &lt;isingex&gt;? You will find the solution in this section &lt;ising_solution&gt;. .",
    "url": "/main-concepts/monte-carlo/",
    "brief": "",
    "desc": "",
    "relUrl": "/main-concepts/monte-carlo/"
  }
  ,"201": {
    "title": "nda::stdutil::mpop",
    "content": "",
    "url": "/cpp-api/nda/stdutil/mpop/",
    "brief": "Make a new std::array by removing one element at the front .",
    "desc": "",
    "relUrl": "/cpp-api/nda/stdutil/mpop/"
  }
  ,"202": {
    "title": "sandbox::myarray<T, R>::myarray",
    "content": "",
    "url": "/cpp-api/sandbox/myarray/myarray-constructors/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/sandbox/myarray/myarray-constructors/"
  }
  ,"203": {
    "title": "sandbox::myarray",
    "content": "",
    "url": "/cpp-api/sandbox/myarray/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/sandbox/myarray/"
  }
  ,"205": {
    "title": "nda",
    "content": "nda, a multi-dimensional array library . Here are the main topics of the documention. For a complete index, see below. .",
    "url": "/cpp-api/nda/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/"
  }
  ,"206": {
    "title": "nda::no_alias_accessor",
    "content": "",
    "url": "/cpp-api/nda/no_alias_accessor/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/no_alias_accessor/"
  }
  ,"207": {
    "title": "nda::default_accessor::accessor<T>::offset",
    "content": "",
    "url": "/cpp-api/nda/default_accessor/accessor/offset/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/default_accessor/accessor/offset/"
  }
  ,"208": {
    "title": "nda::no_alias_accessor::accessor<T>::offset",
    "content": "",
    "url": "/cpp-api/nda/no_alias_accessor/accessor/offset/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/no_alias_accessor/accessor/offset/"
  }
  ,"209": {
    "title": "sandbox::op",
    "content": "",
    "url": "/cpp-api/sandbox/op/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/sandbox/op/"
  }
  ,"210": {
    "title": "nda::array_iterator<Rank, T, Pointer>::operator!=",
    "content": "",
    "url": "/cpp-api/nda/array_iterator/operator!=/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/array_iterator/operator!=/"
  }
  ,"211": {
    "title": "nda::grid_iterator<Rank>::operator!=",
    "content": "",
    "url": "/cpp-api/nda/grid_iterator/operator!=/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/grid_iterator/operator!=/"
  }
  ,"212": {
    "title": "nda::range::const_iterator::operator!=",
    "content": "",
    "url": "/cpp-api/nda/range/const_iterator/operator!=/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/range/const_iterator/operator!=/"
  }
  ,"213": {
    "title": "nda::rect_str<Rank, StaticExtents, StrideOrder, LayoutProp>::operator!=",
    "content": "",
    "url": "/cpp-api/nda/rect_str/operator!=/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/rect_str/operator!=/"
  }
  ,"214": {
    "title": "nda::operator&",
    "content": "",
    "url": "/cpp-api/nda/operator&/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/operator&/"
  }
  ,"215": {
    "title": "nda::operator*",
    "content": "",
    "url": "/cpp-api/nda/operator*/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/operator*/"
  }
  ,"216": {
    "title": "nda::range::const_iterator::operator*",
    "content": "",
    "url": "/cpp-api/nda/range/const_iterator/operator*/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/range/const_iterator/operator*/"
  }
  ,"217": {
    "title": "nda::grid_iterator<Rank>::operator*",
    "content": "",
    "url": "/cpp-api/nda/grid_iterator/operator*/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/grid_iterator/operator*/"
  }
  ,"218": {
    "title": "nda::array_iterator<Rank, T, Pointer>::operator*",
    "content": "",
    "url": "/cpp-api/nda/array_iterator/operator*/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/array_iterator/operator*/"
  }
  ,"219": {
    "title": "nda::basic_array<ValueType, Rank, Layout, Algebra, ContainerPolicy>::operator*=",
    "content": "",
    "url": "/cpp-api/nda/basic_array/operator*=/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_array/operator*=/"
  }
  ,"220": {
    "title": "nda::basic_array_view<ValueType, Rank, Layout, Algebra, AccessorPolicy, OwningPolicy>::operator*=",
    "content": "",
    "url": "/cpp-api/nda/basic_array_view/operator*=/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_array_view/operator*=/"
  }
  ,"221": {
    "title": "nda::range::const_iterator::operator++",
    "content": "",
    "url": "/cpp-api/nda/range/const_iterator/operator++/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/range/const_iterator/operator++/"
  }
  ,"222": {
    "title": "nda::array_iterator<Rank, T, Pointer>::operator++",
    "content": "",
    "url": "/cpp-api/nda/array_iterator/operator++/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/array_iterator/operator++/"
  }
  ,"223": {
    "title": "nda::grid_iterator<Rank>::operator++",
    "content": "",
    "url": "/cpp-api/nda/grid_iterator/operator++/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/grid_iterator/operator++/"
  }
  ,"224": {
    "title": "nda::grid_iterator::operator+",
    "content": "",
    "url": "/cpp-api/nda/grid_iterator/operator+/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/grid_iterator/operator+/"
  }
  ,"225": {
    "title": "nda::array_iterator::operator+",
    "content": "",
    "url": "/cpp-api/nda/array_iterator/operator+/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/array_iterator/operator+/"
  }
  ,"226": {
    "title": "nda::operator+",
    "content": "",
    "url": "/cpp-api/nda/operator+/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/operator+/"
  }
  ,"227": {
    "title": "nda::grid_iterator::operator+=",
    "content": "",
    "url": "/cpp-api/nda/grid_iterator/operator+=/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/grid_iterator/operator+=/"
  }
  ,"228": {
    "title": "nda::basic_array_view<ValueType, Rank, Layout, Algebra, AccessorPolicy, OwningPolicy>::operator+=",
    "content": "",
    "url": "/cpp-api/nda/basic_array_view/operator+=/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_array_view/operator+=/"
  }
  ,"229": {
    "title": "nda::basic_array<ValueType, Rank, Layout, Algebra, ContainerPolicy>::operator+=",
    "content": "",
    "url": "/cpp-api/nda/basic_array/operator+=/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_array/operator+=/"
  }
  ,"230": {
    "title": "nda::array_iterator::operator+=",
    "content": "",
    "url": "/cpp-api/nda/array_iterator/operator+=/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/array_iterator/operator+=/"
  }
  ,"231": {
    "title": "nda::array_iterator::operator--",
    "content": "",
    "url": "/cpp-api/nda/array_iterator/operator--/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/array_iterator/operator--/"
  }
  ,"232": {
    "title": "nda::grid_iterator::operator--",
    "content": "",
    "url": "/cpp-api/nda/grid_iterator/operator--/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/grid_iterator/operator--/"
  }
  ,"233": {
    "title": "nda::array_iterator::operator-",
    "content": "",
    "url": "/cpp-api/nda/array_iterator/operator-/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/array_iterator/operator-/"
  }
  ,"234": {
    "title": "nda::grid_iterator::operator-",
    "content": "",
    "url": "/cpp-api/nda/grid_iterator/operator-/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/grid_iterator/operator-/"
  }
  ,"235": {
    "title": "nda::operator-",
    "content": "",
    "url": "/cpp-api/nda/operator-/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/operator-/"
  }
  ,"236": {
    "title": "nda::array_iterator::operator-=",
    "content": "",
    "url": "/cpp-api/nda/array_iterator/operator-=/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/array_iterator/operator-=/"
  }
  ,"237": {
    "title": "nda::basic_array_view<ValueType, Rank, Layout, Algebra, AccessorPolicy, OwningPolicy>::operator-=",
    "content": "",
    "url": "/cpp-api/nda/basic_array_view/operator-=/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_array_view/operator-=/"
  }
  ,"238": {
    "title": "nda::basic_array<ValueType, Rank, Layout, Algebra, ContainerPolicy>::operator-=",
    "content": "",
    "url": "/cpp-api/nda/basic_array/operator-=/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_array/operator-=/"
  }
  ,"239": {
    "title": "nda::range::const_iterator::operator->",
    "content": "",
    "url": "/cpp-api/nda/range/const_iterator/operator-%3E/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/range/const_iterator/operator->/"
  }
  ,"240": {
    "title": "nda::grid_iterator<Rank>::operator->",
    "content": "",
    "url": "/cpp-api/nda/grid_iterator/operator-%3E/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/grid_iterator/operator->/"
  }
  ,"241": {
    "title": "nda::array_iterator<Rank, T, Pointer>::operator->",
    "content": "",
    "url": "/cpp-api/nda/array_iterator/operator-%3E/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/array_iterator/operator->/"
  }
  ,"242": {
    "title": "nda::basic_array<ValueType, Rank, Layout, Algebra, ContainerPolicy>::operator()",
    "content": "",
    "url": "/cpp-api/nda/basic_array/operator-call/",
    "brief": "Access the array, make a lazy expression or slice of it depending on the arguments .",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_array/operator-call/"
  }
  ,"243": {
    "title": "nda::rect_str<Rank, StaticExtents, StrideOrder, LayoutProp>::operator()",
    "content": "",
    "url": "/cpp-api/nda/rect_str/operator-call/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/rect_str/operator-call/"
  }
  ,"244": {
    "title": "nda::scalar_matrix<S>::operator()",
    "content": "",
    "url": "/cpp-api/nda/scalar_matrix/operator-call/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/scalar_matrix/operator-call/"
  }
  ,"245": {
    "title": "nda::idx_map<Rank, StaticExtents, StrideOrder, LayoutProp>::operator()",
    "content": "",
    "url": "/cpp-api/nda/idx_map/operator-call/",
    "brief": "Number of variables must be exactly the rank or are optionally .",
    "desc": "checked at runtime .",
    "relUrl": "/cpp-api/nda/idx_map/operator-call/"
  }
  ,"246": {
    "title": "nda::array_adapter<R, F>::operator()",
    "content": "",
    "url": "/cpp-api/nda/array_adapter/operator-call/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/array_adapter/operator-call/"
  }
  ,"247": {
    "title": "nda::basic_array_view<ValueType, Rank, Layout, Algebra, AccessorPolicy, OwningPolicy>::operator()",
    "content": "",
    "url": "/cpp-api/nda/basic_array_view/operator-call/",
    "brief": "Access the array, make a lazy expression or slice of it depending on the arguments .",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_array_view/operator-call/"
  }
  ,"248": {
    "title": "nda::mapped<F>::operator()",
    "content": "",
    "url": "/cpp-api/nda/mapped/operator-call/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/mapped/operator-call/"
  }
  ,"249": {
    "title": "nda::scalar_array<S, Rank>::operator()",
    "content": "",
    "url": "/cpp-api/nda/scalar_array/operator-call/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/scalar_array/operator-call/"
  }
  ,"250": {
    "title": "sandbox::myarray<T, R>::operator()",
    "content": "",
    "url": "/cpp-api/sandbox/myarray/operator-call/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/sandbox/myarray/operator-call/"
  }
  ,"251": {
    "title": "sandbox::myarray<T, R>::operator+=",
    "content": "",
    "url": "/cpp-api/sandbox/myarray/operator-compound/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/sandbox/myarray/operator-compound/"
  }
  ,"252": {
    "title": "nda::operator/",
    "content": "",
    "url": "/cpp-api/nda/operator-div/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/operator-div/"
  }
  ,"253": {
    "title": "nda::basic_array_view<ValueType, Rank, Layout, Algebra, AccessorPolicy, OwningPolicy>::operator/=",
    "content": "",
    "url": "/cpp-api/nda/basic_array_view/operator-div=/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_array_view/operator-div=/"
  }
  ,"254": {
    "title": "nda::basic_array<ValueType, Rank, Layout, Algebra, ContainerPolicy>::operator/=",
    "content": "",
    "url": "/cpp-api/nda/basic_array/operator-div=/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_array/operator-div=/"
  }
  ,"255": {
    "title": "nda::scalar_matrix<S>::operator[]",
    "content": "",
    "url": "/cpp-api/nda/scalar_matrix/operator-index/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/scalar_matrix/operator-index/"
  }
  ,"256": {
    "title": "nda::basic_array_view<ValueType, Rank, Layout, Algebra, AccessorPolicy, OwningPolicy>::operator[]",
    "content": "",
    "url": "/cpp-api/nda/basic_array_view/operator-index/",
    "brief": "Access the array, make a lazy expression or slice of it depending on the arguments .",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_array_view/operator-index/"
  }
  ,"257": {
    "title": "nda::basic_array<ValueType, Rank, Layout, Algebra, ContainerPolicy>::operator[]",
    "content": "",
    "url": "/cpp-api/nda/basic_array/operator-index/",
    "brief": "Access the array, make a lazy expression or slice of it depending on the arguments .",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_array/operator-index/"
  }
  ,"258": {
    "title": "nda::scalar_array<S, Rank>::operator[]",
    "content": "",
    "url": "/cpp-api/nda/scalar_array/operator-index/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/scalar_array/operator-index/"
  }
  ,"259": {
    "title": "nda::array_iterator::operator[]",
    "content": "",
    "url": "/cpp-api/nda/array_iterator/operator-index/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/array_iterator/operator-index/"
  }
  ,"260": {
    "title": "nda::array_iterator::operator<",
    "content": "",
    "url": "/cpp-api/nda/array_iterator/operator%3C/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/array_iterator/operator</"
  }
  ,"261": {
    "title": "nda::grid_iterator::operator<",
    "content": "",
    "url": "/cpp-api/nda/grid_iterator/operator%3C/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/grid_iterator/operator</"
  }
  ,"262": {
    "title": "nda::range::operator<<",
    "content": "",
    "url": "/cpp-api/nda/range/operator%3C%3C/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/range/operator<</"
  }
  ,"263": {
    "title": "nda::runtime_error::operator<<",
    "content": "",
    "url": "/cpp-api/nda/runtime_error/operator%3C%3C/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/runtime_error/operator<</"
  }
  ,"264": {
    "title": "nda::operator<<",
    "content": "",
    "url": "/cpp-api/nda/operator%3C%3C/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/operator<</"
  }
  ,"265": {
    "title": "sandbox::runtime_error::operator<<",
    "content": "",
    "url": "/cpp-api/sandbox/runtime_error/operator%3C%3C/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/sandbox/runtime_error/operator<</"
  }
  ,"266": {
    "title": "nda::array_iterator::operator<=",
    "content": "",
    "url": "/cpp-api/nda/array_iterator/operator%3C=/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/array_iterator/operator<=/"
  }
  ,"267": {
    "title": "nda::basic_array<ValueType, Rank, Layout, Algebra, ContainerPolicy>::operator=",
    "content": "",
    "url": "/cpp-api/nda/basic_array/operator=/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_array/operator=/"
  }
  ,"268": {
    "title": "sandbox::runtime_error::operator=",
    "content": "",
    "url": "/cpp-api/sandbox/runtime_error/operator=/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/sandbox/runtime_error/operator=/"
  }
  ,"269": {
    "title": "nda::runtime_error::operator=",
    "content": "",
    "url": "/cpp-api/nda/runtime_error/operator=/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/runtime_error/operator=/"
  }
  ,"270": {
    "title": "nda::rect_str<Rank, StaticExtents, StrideOrder, LayoutProp>::operator=",
    "content": "",
    "url": "/cpp-api/nda/rect_str/operator=/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/rect_str/operator=/"
  }
  ,"271": {
    "title": "nda::idx_map<Rank, StaticExtents, StrideOrder, LayoutProp>::operator=",
    "content": "",
    "url": "/cpp-api/nda/idx_map/operator=/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/idx_map/operator=/"
  }
  ,"272": {
    "title": "sandbox::myarray<T, R>::operator=",
    "content": "",
    "url": "/cpp-api/sandbox/myarray/operator=/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/sandbox/myarray/operator=/"
  }
  ,"273": {
    "title": "nda::basic_array_view<ValueType, Rank, Layout, Algebra, AccessorPolicy, OwningPolicy>::operator=",
    "content": "",
    "url": "/cpp-api/nda/basic_array_view/operator=/",
    "brief": "Same as the general case .",
    "desc": "[C++ oddity : this case must be explicitly coded too] .",
    "relUrl": "/cpp-api/nda/basic_array_view/operator=/"
  }
  ,"274": {
    "title": "nda::range::const_iterator::operator==",
    "content": "",
    "url": "/cpp-api/nda/range/const_iterator/operator==/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/range/const_iterator/operator==/"
  }
  ,"275": {
    "title": "nda::grid_iterator<Rank>::operator==",
    "content": "",
    "url": "/cpp-api/nda/grid_iterator/operator==/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/grid_iterator/operator==/"
  }
  ,"276": {
    "title": "nda::rect_str<Rank, StaticExtents, StrideOrder, LayoutProp>::operator==",
    "content": "",
    "url": "/cpp-api/nda/rect_str/operator==/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/rect_str/operator==/"
  }
  ,"277": {
    "title": "nda::idx_map<Rank, StaticExtents, StrideOrder, LayoutProp>::operator==",
    "content": "",
    "url": "/cpp-api/nda/idx_map/operator==/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/idx_map/operator==/"
  }
  ,"278": {
    "title": "nda::array_iterator<Rank, T, Pointer>::operator==",
    "content": "",
    "url": "/cpp-api/nda/array_iterator/operator==/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/array_iterator/operator==/"
  }
  ,"279": {
    "title": "nda::operator==",
    "content": "",
    "url": "/cpp-api/nda/operator==/",
    "brief": "————— operator == ——————— .",
    "desc": "",
    "relUrl": "/cpp-api/nda/operator==/"
  }
  ,"280": {
    "title": "nda::grid_iterator::operator>",
    "content": "",
    "url": "/cpp-api/nda/grid_iterator/operator%3E/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/grid_iterator/operator>/"
  }
  ,"281": {
    "title": "nda::array_iterator::operator>",
    "content": "",
    "url": "/cpp-api/nda/array_iterator/operator%3E/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/array_iterator/operator>/"
  }
  ,"282": {
    "title": "nda::array_iterator::operator>=",
    "content": "",
    "url": "/cpp-api/nda/array_iterator/operator%3E=/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/array_iterator/operator>=/"
  }
  ,"283": {
    "title": "nda::operator|",
    "content": "",
    "url": "/cpp-api/nda/operator%7C/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/operator|/"
  }
  ,"284": {
    "title": "Overview",
    "content": "Goal and main features . to be written … .",
    "url": "/cpp-api/nda/overview/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/overview/"
  }
  ,"285": {
    "title": "nda::permuted_indices_view",
    "content": "",
    "url": "/cpp-api/nda/permuted_indices_view/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/permuted_indices_view/"
  }
  ,"286": {
    "title": "nda::stdutil::pop",
    "content": "",
    "url": "/cpp-api/nda/stdutil/pop/",
    "brief": "Make a new std::array by removing one element at the end .",
    "desc": "",
    "relUrl": "/cpp-api/nda/stdutil/pop/"
  }
  ,"287": {
    "title": "NOTHING 🚮",
    "content": "🚮 . | This is a strong Warning in md | . The class basic_array . Some tables | . &lt;T table title: Algorithms file: nda key: Algorithms ncol: 3 T&gt; . . &lt;T table title: A table of function mapping file: nda key: ArrayFunction ncol: 3 T&gt; . &lt;T table . title: A table of function mapping which do not apply to Matrices file: nda key: ArrayNoMatrixFunction ncol: 3 collapsible: true T&gt; . .",
    "url": "/cpp-api/nda/POUBELLE/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/POUBELLE/"
  }
  ,"288": {
    "title": "nda::pow",
    "content": "",
    "url": "/cpp-api/nda/pow/",
    "brief": "pow for integer .",
    "desc": "",
    "relUrl": "/cpp-api/nda/pow/"
  }
  ,"289": {
    "title": "Python API",
    "content": "Python API . Faucibus nisl tincidunt eget nullam non nisi. Maecenas accumsan lacus vel facilisis volutpat est velit egestas dui. Arcu dui vivamus arcu felis bibendum ut tristique et. .",
    "url": "/python-api/",
    "brief": "",
    "desc": "",
    "relUrl": "/python-api/"
  }
  ,"290": {
    "title": "nda::range::range",
    "content": "",
    "url": "/cpp-api/nda/range/range-constructors/",
    "brief": "Default constructor. .",
    "desc": "Equivalent to all, takes all indices As in Python, range() stands for the whole set of indices in the dimension (like : in python) :: A(range(), 0) // take the first column of A .",
    "relUrl": "/cpp-api/nda/range/range-constructors/"
  }
  ,"291": {
    "title": "nda::range::~range",
    "content": "",
    "url": "/cpp-api/nda/range/range-destructor/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/range/range-destructor/"
  }
  ,"292": {
    "title": "nda::range",
    "content": "",
    "url": "/cpp-api/nda/range/",
    "brief": "range mimics the Python range. .",
    "desc": "",
    "relUrl": "/cpp-api/nda/range/"
  }
  ,"293": {
    "title": "nda::range_all::range_all",
    "content": "",
    "url": "/cpp-api/nda/range_all/range_all-constructors/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/range_all/range_all-constructors/"
  }
  ,"294": {
    "title": "nda::range_all::~range_all",
    "content": "",
    "url": "/cpp-api/nda/range_all/range_all-destructor/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/range_all/range_all-destructor/"
  }
  ,"295": {
    "title": "nda::range_all",
    "content": "",
    "url": "/cpp-api/nda/range_all/",
    "brief": "Equivalent to range, but quicker (no operation). .",
    "desc": "",
    "relUrl": "/cpp-api/nda/range_all/"
  }
  ,"296": {
    "title": "nda::range_tag::range_tag",
    "content": "",
    "url": "/cpp-api/nda/range_tag/range_tag-constructors/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/range_tag/range_tag-constructors/"
  }
  ,"297": {
    "title": "nda::range_tag::~range_tag",
    "content": "",
    "url": "/cpp-api/nda/range_tag/range_tag-destructor/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/range_tag/range_tag-destructor/"
  }
  ,"298": {
    "title": "nda::range_tag",
    "content": "",
    "url": "/cpp-api/nda/range_tag/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/range_tag/"
  }
  ,"299": {
    "title": "nda::idx_map<Rank, StaticExtents, StrideOrder, LayoutProp>::rank",
    "content": "",
    "url": "/cpp-api/nda/idx_map/rank/",
    "brief": "Rank of the map (number of arguments) .",
    "desc": "",
    "relUrl": "/cpp-api/nda/idx_map/rank/"
  }
  ,"300": {
    "title": "nda::rank_are_compatible",
    "content": "",
    "url": "/cpp-api/nda/rank_are_compatible/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/rank_are_compatible/"
  }
  ,"301": {
    "title": "nda::real",
    "content": "",
    "url": "/cpp-api/nda/real/",
    "brief": "Maps real onto the array .",
    "desc": "",
    "relUrl": "/cpp-api/nda/real/"
  }
  ,"302": {
    "title": "nda::basic_array_view<ValueType, Rank, Layout, Algebra, AccessorPolicy, OwningPolicy>::rebind",
    "content": "",
    "url": "/cpp-api/nda/basic_array_view/rebind/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_array_view/rebind/"
  }
  ,"303": {
    "title": "nda::rect_str<Rank, StaticExtents, StrideOrder, LayoutProp>::rect_str",
    "content": "",
    "url": "/cpp-api/nda/rect_str/rect_str-constructors/",
    "brief": "Default constructor. Strides are not initiliazed. .",
    "desc": "",
    "relUrl": "/cpp-api/nda/rect_str/rect_str-constructors/"
  }
  ,"304": {
    "title": "nda::rect_str",
    "content": "",
    "url": "/cpp-api/nda/rect_str/",
    "brief": "The layout that maps the indices to linear index, with additional string indices .",
    "desc": "",
    "relUrl": "/cpp-api/nda/rect_str/"
  }
  ,"305": {
    "title": "nda::reinterpret_add_fast_dims_of_size_one",
    "content": "",
    "url": "/cpp-api/nda/reinterpret_add_fast_dims_of_size_one/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/reinterpret_add_fast_dims_of_size_one/"
  }
  ,"306": {
    "title": "nda::reshape",
    "content": "",
    "url": "/cpp-api/nda/reshape/",
    "brief": "Transform an array into another one with a new shape. .",
    "desc": "It steals the data of the (rvalue reference) array. .",
    "relUrl": "/cpp-api/nda/reshape/"
  }
  ,"307": {
    "title": "nda::reshaped_view",
    "content": "",
    "url": "/cpp-api/nda/reshaped_view/",
    "brief": "Make a new view of an array or a contiguous array_view with a different shape. .",
    "desc": "Contiguous data only [runtime checked] | .",
    "relUrl": "/cpp-api/nda/reshaped_view/"
  }
  ,"308": {
    "title": "nda::basic_array<ValueType, Rank, Layout, Algebra, ContainerPolicy>::resize",
    "content": "",
    "url": "/cpp-api/nda/basic_array/resize/",
    "brief": "",
    "desc": "Resizes the array. Invalidates all references to the storage. Content is undefined, makes no copy of previous data. .",
    "relUrl": "/cpp-api/nda/basic_array/resize/"
  }
  ,"309": {
    "title": "nda::resize_or_check_if_view",
    "content": "",
    "url": "/cpp-api/nda/resize_or_check_if_view/",
    "brief": "",
    "desc": "Resize if A is a container, or assert that the view has the right dimension if A is view .",
    "relUrl": "/cpp-api/nda/resize_or_check_if_view/"
  }
  ,"310": {
    "title": "Responsive Modifiers",
    "content": "Responsive modifiers . Jek Theme TRIQS spacing works in conjunction with a variety of modifiers that allow you to target specific screen sizes responsively. Use these in conjunction with spacing and display prefix and suffix classes. . Modifier Screen size . (none) | All screens until the next modifier | . xs | 320px (20rem) and up | . sm | 500px (31.25rem) and up | . md | 740px (46.25rem) and up | . lg | 1120px (70rem) and up | . xl | 1400px (87.5rem) and up | .",
    "url": "/theme/utilities/responsive/",
    "brief": "",
    "desc": "",
    "relUrl": "/theme/utilities/responsive/"
  }
  ,"311": {
    "title": "nda::runtime_error::runtime_error",
    "content": "",
    "url": "/cpp-api/nda/runtime_error/runtime_error-constructors/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/runtime_error/runtime_error-constructors/"
  }
  ,"312": {
    "title": "sandbox::runtime_error::runtime_error",
    "content": "",
    "url": "/cpp-api/sandbox/runtime_error/runtime_error-constructors/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/sandbox/runtime_error/runtime_error-constructors/"
  }
  ,"313": {
    "title": "sandbox::runtime_error::~runtime_error",
    "content": "",
    "url": "/cpp-api/sandbox/runtime_error/runtime_error-destructor/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/sandbox/runtime_error/runtime_error-destructor/"
  }
  ,"314": {
    "title": "nda::runtime_error::~runtime_error",
    "content": "",
    "url": "/cpp-api/nda/runtime_error/runtime_error-destructor/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/runtime_error/runtime_error-destructor/"
  }
  ,"315": {
    "title": "sandbox::runtime_error",
    "content": "",
    "url": "/cpp-api/sandbox/runtime_error/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/sandbox/runtime_error/"
  }
  ,"316": {
    "title": "nda::runtime_error",
    "content": "",
    "url": "/cpp-api/nda/runtime_error/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/runtime_error/"
  }
  ,"317": {
    "title": "sandbox",
    "content": "Sandbox, a toy space for testing . Here are the main topics of the documention. For a complete index, see below. .",
    "url": "/cpp-api/sandbox/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/sandbox/"
  }
  ,"318": {
    "title": "nda::scalar_array",
    "content": "",
    "url": "/cpp-api/nda/scalar_array/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/scalar_array/"
  }
  ,"319": {
    "title": "nda::scalar_matrix",
    "content": "",
    "url": "/cpp-api/nda/scalar_matrix/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/scalar_matrix/"
  }
  ,"320": {
    "title": "Search",
    "content": "Search . . Search Set up search Generate search index | Enable search in configuration | | Hiding pages from search Example | | | . Jek Theme TRIQS uses lunr.js to add a client-side search interface powered by a JSON index that Jekyll generates. All search results are shown in an auto-complete style interface (there is no search results page). By default, all generated HTML pages are indexed using the following data points: . Page title | Page content | Page URL | Page description | Page brief | . Set up search . Generate search index . Before you can use search, you must initialize the feature by running this rake command that comes with jek-theme-triqs: . bash $ bundle exec rake search:init . This command creates the search-data.json file that Jekyll uses to create your search index. Alternatively, you can create the file manually in the assets/js/ directory of your Jekyll site with this content: . liquid {% raw %} { {% assign comma = false %} {% for page in site.html_pages %}{% if page.search_exclude != true %}{% if comma == true%},{% endif %}&quot;{{ forloop.index0 }}&quot;: { &quot;title&quot;: &quot;{{ page.title | replace: &#39;&amp;amp;&#39;, &#39;&amp;&#39; }}&quot;, &quot;content&quot;: &quot;{{ page.content | markdownify | replace: &#39;&lt;/h&#39;, &#39; . &lt;/h&#39; | replace: &#39;&lt;hr&#39;, &#39; . &lt;hr&#39; | replace: &#39;&lt;/p&#39;, &#39; . &lt;/p&#39; | replace: &#39;&lt;/ul&#39;, &#39; . &lt;/ul&#39; | replace: &#39;&lt;/tr&#39;, &#39; . &lt;/tr&#39; | replace: &#39;&lt;/li&#39;, &#39; | &lt;/li&#39; | replace: &#39;&lt;/td&#39;, &#39; | &lt;/td&#39; | strip_html | escape_once | remove: &#39;&#39; | remove: &#39;&#39; | remove: &#39;&#39; | replace: &#39; &#39;, &#39; &#39; | replace: &#39; . &#39;, &#39; . &#39; | replace: &#39; . &#39;, &#39; . &#39; | normalize_whitespace }}&quot;, &quot;url&quot;: &quot;{{ page.url | absolute_url }}&quot;, &quot;brief&quot;: &quot;{{ page.brief | markdownify | replace: &#39;&lt;/h&#39;, &#39; . &lt;/h&#39; | replace: &#39;&lt;hr&#39;, &#39; . &lt;hr&#39; | replace: &#39;&lt;/p&#39;, &#39; . &lt;/p&#39; | replace: &#39;&lt;/ul&#39;, &#39; . &lt;/ul&#39; | replace: &#39;&lt;/tr&#39;, &#39; . &lt;/tr&#39; | replace: &#39;&lt;/li&#39;, &#39; | &lt;/li&#39; | replace: &#39;&lt;/td&#39;, &#39; | &lt;/td&#39; | strip_html | escape_once | remove: &#39;&#39; | remove: &#39;&#39; | remove: &#39;&#39; | replace: &#39; &#39;, &#39; &#39; | replace: &#39; . &#39;, &#39; . &#39; | replace: &#39; . &#39;, &#39; . &#39; | normalize_whitespace | strip_newlines }}&quot;, &quot;desc&quot;: &quot;{{ page.desc | markdownify | replace: &#39;&lt;/h&#39;, &#39; . &lt;/h&#39; | replace: &#39;&lt;hr&#39;, &#39; . &lt;hr&#39; | replace: &#39;&lt;/p&#39;, &#39; . &lt;/p&#39; | replace: &#39;&lt;/ul&#39;, &#39; . &lt;/ul&#39; | replace: &#39;&lt;/tr&#39;, &#39; . &lt;/tr&#39; | replace: &#39;&lt;/li&#39;, &#39; | &lt;/li&#39; | replace: &#39;&lt;/td&#39;, &#39; | &lt;/td&#39; | strip_html | escape_once | remove: &#39;&#39; | remove: &#39;&#39; | remove: &#39;&#39; | replace: &#39; &#39;, &#39; &#39; | replace: &#39; . &#39;, &#39; . &#39; | replace: &#39; . &#39;, &#39; . &#39; | normalize_whitespace | strip_newlines }}&quot;, &quot;relUrl&quot;: &quot;{{ page.url }}&quot; }{% assign comma = true %} {% endif %}{% endfor %} }{% endraw %} . Note: If you don’t run this rake command or create this file manually, search will not work (or it will use the search index data from this docs site, not your site’s content). . Enable search in configuration . In your site’s _config.yml, enable search: . yaml # Enable or disable the site search search_enabled: true . The default is for hyphens to separate tokens in search terms: gem-based is equivalent to gem based, matching either word. To allow search for hyphenated words: . yaml # Set the search token separator search_tokenizer_separator: /[ s/]+/ . Hiding pages from search . Sometimes you might have a page that you don’t want to be indexed for the search nor to show up in search results, e.g, a 404 page. To exclude a page from search, add the search_exclude: true parameter to the page’s YAML front matter: . Example . yaml . title: Page not found nav_exclude: true search_exclude: true — . .",
    "url": "/theme/utilities/search/",
    "brief": "",
    "desc": "",
    "relUrl": "/theme/utilities/search/"
  }
  ,"321": {
    "title": "nda::basic_array<ValueType, Rank, Layout, Algebra, ContainerPolicy>::shape",
    "content": "",
    "url": "/cpp-api/nda/basic_array/shape/",
    "brief": "Shape .",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_array/shape/"
  }
  ,"322": {
    "title": "nda::scalar_array<S, Rank>::shape",
    "content": "",
    "url": "/cpp-api/nda/scalar_array/shape/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/scalar_array/shape/"
  }
  ,"323": {
    "title": "sandbox::myarray<T, R>::shape",
    "content": "",
    "url": "/cpp-api/sandbox/myarray/shape/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/sandbox/myarray/shape/"
  }
  ,"324": {
    "title": "nda::array_adapter<R, F>::shape",
    "content": "",
    "url": "/cpp-api/nda/array_adapter/shape/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/array_adapter/shape/"
  }
  ,"325": {
    "title": "nda::basic_array_view<ValueType, Rank, Layout, Algebra, AccessorPolicy, OwningPolicy>::shape",
    "content": "",
    "url": "/cpp-api/nda/basic_array_view/shape/",
    "brief": "Shape .",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_array_view/shape/"
  }
  ,"326": {
    "title": "nda::scalar_matrix<S>::shape",
    "content": "",
    "url": "/cpp-api/nda/scalar_matrix/shape/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/scalar_matrix/shape/"
  }
  ,"327": {
    "title": "sandbox::faulty_array<T, R, U>::shape",
    "content": "",
    "url": "/cpp-api/sandbox/faulty_array/shape/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/sandbox/faulty_array/shape/"
  }
  ,"328": {
    "title": "nda::shared",
    "content": "",
    "url": "/cpp-api/nda/shared/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/shared/"
  }
  ,"329": {
    "title": "sandbox::simple_f",
    "content": "",
    "url": "/cpp-api/sandbox/simple_f/",
    "brief": "Doc breif .",
    "desc": "Content .",
    "relUrl": "/cpp-api/sandbox/simple_f/"
  }
  ,"330": {
    "title": "nda::sin",
    "content": "",
    "url": "/cpp-api/nda/sin/",
    "brief": "Maps sin onto the array .",
    "desc": "",
    "relUrl": "/cpp-api/nda/sin/"
  }
  ,"331": {
    "title": "nda::sinh",
    "content": "",
    "url": "/cpp-api/nda/sinh/",
    "brief": "Maps sinh onto the array .",
    "desc": "",
    "relUrl": "/cpp-api/nda/sinh/"
  }
  ,"332": {
    "title": "nda::basic_array_view<ValueType, Rank, Layout, Algebra, AccessorPolicy, OwningPolicy>::size",
    "content": "",
    "url": "/cpp-api/nda/basic_array_view/size/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_array_view/size/"
  }
  ,"333": {
    "title": "nda::range::size",
    "content": "",
    "url": "/cpp-api/nda/range/size/",
    "brief": "Number of indices in the range .",
    "desc": "",
    "relUrl": "/cpp-api/nda/range/size/"
  }
  ,"334": {
    "title": "nda::basic_array<ValueType, Rank, Layout, Algebra, ContainerPolicy>::size",
    "content": "",
    "url": "/cpp-api/nda/basic_array/size/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_array/size/"
  }
  ,"335": {
    "title": "nda::idx_map<Rank, StaticExtents, StrideOrder, LayoutProp>::size",
    "content": "",
    "url": "/cpp-api/nda/idx_map/size/",
    "brief": "Total number of elements (products of lengths in each dimension). .",
    "desc": "",
    "relUrl": "/cpp-api/nda/idx_map/size/"
  }
  ,"336": {
    "title": "nda::rect_str<Rank, StaticExtents, StrideOrder, LayoutProp>::slice",
    "content": "",
    "url": "/cpp-api/nda/rect_str/slice/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/rect_str/slice/"
  }
  ,"337": {
    "title": "nda::idx_map<Rank, StaticExtents, StrideOrder, LayoutProp>::slice",
    "content": "",
    "url": "/cpp-api/nda/idx_map/slice/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/idx_map/slice/"
  }
  ,"338": {
    "title": "sandbox::AB45<R>::some_long_action",
    "content": "",
    "url": "/cpp-api/sandbox/AB45/some_long_action/",
    "brief": "A breif descp is critical .",
    "desc": "But a long one also .",
    "relUrl": "/cpp-api/sandbox/AB45/some_long_action/"
  }
  ,"339": {
    "title": "nda::sqrt",
    "content": "",
    "url": "/cpp-api/nda/sqrt/",
    "brief": "Maps sqrt onto the array .",
    "desc": "",
    "relUrl": "/cpp-api/nda/sqrt/"
  }
  ,"340": {
    "title": "nda::sso",
    "content": "",
    "url": "/cpp-api/nda/sso/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/sso/"
  }
  ,"341": {
    "title": "nda::stack",
    "content": "",
    "url": "/cpp-api/nda/stack/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/stack/"
  }
  ,"342": {
    "title": "nda::static_extents",
    "content": "",
    "url": "/cpp-api/nda/static_extents/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/static_extents/"
  }
  ,"343": {
    "title": "nda::stdutil",
    "content": "nda::stdutil .",
    "url": "/cpp-api/nda/stdutil/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/stdutil/"
  }
  ,"344": {
    "title": "nda::range::step",
    "content": "",
    "url": "/cpp-api/nda/range/step/",
    "brief": "Step between two indices .",
    "desc": "",
    "relUrl": "/cpp-api/nda/range/step/"
  }
  ,"345": {
    "title": "nda::basic_array<ValueType, Rank, Layout, Algebra, ContainerPolicy>::stride_order",
    "content": "",
    "url": "/cpp-api/nda/basic_array/stride_order/",
    "brief": "Memory stride_order .",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_array/stride_order/"
  }
  ,"346": {
    "title": "nda::basic_array_view<ValueType, Rank, Layout, Algebra, AccessorPolicy, OwningPolicy>::stride_order",
    "content": "",
    "url": "/cpp-api/nda/basic_array_view/stride_order/",
    "brief": "Memory stride_order .",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_array_view/stride_order/"
  }
  ,"347": {
    "title": "nda::stride_order_of_grouped_idx",
    "content": "",
    "url": "/cpp-api/nda/stride_order_of_grouped_idx/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/stride_order_of_grouped_idx/"
  }
  ,"348": {
    "title": "nda::idx_map<Rank, StaticExtents, StrideOrder, LayoutProp>::strides",
    "content": "",
    "url": "/cpp-api/nda/idx_map/strides/",
    "brief": "Strides of each dimension. .",
    "desc": "",
    "relUrl": "/cpp-api/nda/idx_map/strides/"
  }
  ,"349": {
    "title": "nda::sum",
    "content": "",
    "url": "/cpp-api/nda/sum/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/sum/"
  }
  ,"350": {
    "title": "nda::basic_array_view::swap",
    "content": "",
    "url": "/cpp-api/nda/basic_array_view/swap/",
    "brief": "Swaps by rebinding a and b .",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_array_view/swap/"
  }
  ,"351": {
    "title": "Tables",
    "content": "Tables . Tables are responsive by default, allowing wide tables to have a horizontal scroll to access columns outside of the normal viewport. . head1 head two three . ok | good swedish fish | nice | . out of stock | good and plenty | nice | . ok | good oreos | hmm | . ok | good zoute drop | yumm | . markdown | head1 | head two | three | |:-|:|:| | ok | good swedish fish | nice | | out of stock | good and plenty | nice | | ok | good `oreos` | hmm | | ok | good `zoute` drop | yumm | .",
    "url": "/theme/ui-components/tables/",
    "brief": "",
    "desc": "",
    "relUrl": "/theme/ui-components/tables/"
  }
  ,"352": {
    "title": "nda::tan",
    "content": "",
    "url": "/cpp-api/nda/tan/",
    "brief": "Maps tan onto the array .",
    "desc": "",
    "relUrl": "/cpp-api/nda/tan/"
  }
  ,"353": {
    "title": "nda::tanh",
    "content": "",
    "url": "/cpp-api/nda/tanh/",
    "brief": "Maps tanh onto the array .",
    "desc": "",
    "relUrl": "/cpp-api/nda/tanh/"
  }
  ,"354": {
    "title": "Theme",
    "content": "Theme . . Will be excluded from final sidebar navigation . To make it as easy as possible to update this documentation, the following pages contain detailed information on design, customization, and configuration. . . Configuration | UI Components | Utilities |",
    "url": "/theme/",
    "brief": "",
    "desc": "",
    "relUrl": "/theme/"
  }
  ,"355": {
    "title": "nda::stdutil::to_vector",
    "content": "",
    "url": "/cpp-api/nda/stdutil/to_vector/",
    "brief": "Convert a std::array to a .",
    "desc": "",
    "relUrl": "/cpp-api/nda/stdutil/to_vector/"
  }
  ,"356": {
    "title": "nda::trace",
    "content": "",
    "url": "/cpp-api/nda/trace/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/trace/"
  }
  ,"357": {
    "title": "nda::transpose",
    "content": "",
    "url": "/cpp-api/nda/transpose/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/transpose/"
  }
  ,"358": {
    "title": "nda::idx_map<Rank, StaticExtents, StrideOrder, LayoutProp>::transpose",
    "content": "",
    "url": "/cpp-api/nda/idx_map/transpose/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/idx_map/transpose/"
  }
  ,"359": {
    "title": "nda::rect_str<Rank, StaticExtents, StrideOrder, LayoutProp>::transpose",
    "content": "",
    "url": "/cpp-api/nda/rect_str/transpose/",
    "brief": "/ —————- Transposition ————————- .",
    "desc": "",
    "relUrl": "/cpp-api/nda/rect_str/transpose/"
  }
  ,"360": {
    "title": "nda::transposed_view",
    "content": "",
    "url": "/cpp-api/nda/transposed_view/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/transposed_view/"
  }
  ,"361": {
    "title": "Triqs Core Library",
    "content": "The core TRIQS library . The core TRIQS library |",
    "url": "/triqs/",
    "brief": "",
    "desc": "",
    "relUrl": "/triqs/"
  }
  ,"362": {
    "title": "Typography",
    "content": "Typography Utilities . . Font size | Font weight | Line height | . Font size . Use the .fs-1 - .fs-10 to set an explicit font-size. . Class Small screen size font-size Large screen size font-size . .fs-1 | 9px | 10px | . .fs-2 | 11px | 12px | . .fs-3 | 12px | 14px | . .fs-4 | 14px | 16px | . .fs-5 | 16px | 18px | . .fs-6 | 18px | 24px | . .fs-7 | 24px | 32px | . .fs-8 | 32px | 38px | . .fs-9 | 38px | 42px | . .fs-10 | 42px | 48px | . Font size 1 . Font size 2 . Font size 3 . Font size 4 . Font size 5 . Font size 6 . Font size 7 . Font size 8 . Font size 9 . Font size 10 . markdown In Markdown, use the {: } wrapper to apply custom classes: . Font size 1 . Font size 2 . Font size 3 . Font size 4 . Font size 5 . Font size 6 . Font size 7 . Font size 8 . Font size 9 . Font size 10 . . Font weight . Use the .fw-300 - .fw-700 to set an explicit font-size. . Font weight 300 . Font weight 400 . Font weight 500 . Font weight 700 . markdown In Markdown, use the {: } wrapper to apply custom classes: . Font weight 300 . Font weight 400 . Font weight 500 . Font weight 700 . . Line height . Use the lh- classes to explicitly apply line height to text. . Class line-height value Notes . .lh-0 | 0 |   | . .lh-tight | 1.1 | Default for headings | . .lh-default | 1.4 | Default for body (paragraphs) | . No Line height No Line height . Tight line height Tight line height . Default line height Default line height . markdown In Markdown, use the {: } wrapper to apply custom classes: . No Line height No Line height . Tight line height Tight line height . Default line height Default line height . .",
    "url": "/theme/utilities/typography/",
    "brief": "",
    "desc": "",
    "relUrl": "/theme/utilities/typography/"
  }
  ,"363": {
    "title": "Typography",
    "content": "Typography . . Font stack | Responsive type scale | Headings | Body text | Inline elements | Typographic Utilities | . Font stack . By default, Jek Theme TRIQS uses a native system font stack for sans-serif fonts: . scss -apple-system, BlinkMacSystemFont, &quot;helvetica neue&quot;, helvetica, roboto, noto, &quot;segoe ui&quot;, arial, sans-serif . ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz . For monospace type, like code snippets or the &lt;pre&gt; element, Jek Theme TRIQS uses a native system font stack for monospace fonts: . scss &quot;SFMono-Regular&quot;, Menlo, Consolas, Monospace . ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz . . Responsive type scale . Jek Theme TRIQS uses a responsive type scale that shifts depending on the viewport size. . Selector Small screen size font-size Large screen size font-size . h1, .text-alpha | 32px | 36px | . h2, .text-beta | 18px | 24px | . h3, .text-gamma | 16px | 18px | . h4, .text-delta | 14px | 16px | . h5, .text-epsilon | 16px | 18px | . h6, .text-zeta | 18px | 24px | . body | 14px | 16px | . . Headings . Headings are rendered like this: . Heading 1 . Heading 2 . Heading 3 . Heading 4 . Heading 5 . Heading 6 . markdown # Heading 1 ## Heading 2 ### Heading 3 #### Heading 4 ##### Heading 5 ###### Heading 6 . . Body text . Default body text is rendered like this: . Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. . markdown Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. . . Inline elements . Text can be bold, italic, or ~~strikethrough~~. . Link to another page. . markdown Text can be bold, italic, or ~~strikethrough~~. . Link to another page. . . Typographic Utilities . There are a number of specific typographic CSS classes that allow you to override default styling for font size, font weight, line height, and capitalization. . View typography utilities .",
    "url": "/theme/ui-components/typography/",
    "brief": "",
    "desc": "",
    "relUrl": "/theme/ui-components/typography/"
  }
  ,"364": {
    "title": "UI Components",
    "content": "UI Components . To make it as easy as possible to write documentation in plain Markdown, most UI components are styled using default Markdown elements with few additional CSS classes needed. .",
    "url": "/theme/ui-components/",
    "brief": "",
    "desc": "",
    "relUrl": "/theme/ui-components/"
  }
  ,"365": {
    "title": "Utilities",
    "content": "Utilities . CSS utility classes come in handy when you to want to override default styles to create additional whitespace (margins/padding), correct unexpected shifts in font size or weight, add color, or hide (or show) something at a specific screen size. .",
    "url": "/theme/utilities/",
    "brief": "",
    "desc": "",
    "relUrl": "/theme/utilities/"
  }
  ,"366": {
    "title": "",
    "content": "Notion of multidimensional view . TO BE WRITTEN . Give access to a restricted portion of the array. . | Notion in layout . | Relation with concept . | Memory management. . | .",
    "url": "/cpp-api/nda/notions/view/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/notions/view/"
  }
  ,"367": {
    "title": "nda::vstack",
    "content": "",
    "url": "/cpp-api/nda/vstack/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/vstack/"
  }
  ,"368": {
    "title": "sandbox::runtime_error::what",
    "content": "",
    "url": "/cpp-api/sandbox/runtime_error/what/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/sandbox/runtime_error/what/"
  }
  ,"369": {
    "title": "nda::runtime_error::what",
    "content": "",
    "url": "/cpp-api/nda/runtime_error/what/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/runtime_error/what/"
  }
  ,"370": {
    "title": "nda::zeros",
    "content": "",
    "url": "/cpp-api/nda/zeros/",
    "brief": "Make a array of zeros with the given dimensions. .",
    "desc": "Return a scalar for the case of rank zero. If we want more general array, use the static factory zeros [See also] .",
    "relUrl": "/cpp-api/nda/zeros/"
  }
  ,"371": {
    "title": "nda::basic_array<ValueType, Rank, Layout, Algebra, ContainerPolicy>::zeros",
    "content": "",
    "url": "/cpp-api/nda/basic_array/zeros/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/nda/basic_array/zeros/"
  }
  ,"372": {
    "title": "sandbox::myarray<T, R>::zozo",
    "content": "",
    "url": "/cpp-api/sandbox/myarray/zozo/",
    "brief": "",
    "desc": "",
    "relUrl": "/cpp-api/sandbox/myarray/zozo/"
  }
  
}